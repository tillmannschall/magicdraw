<?xml version="1.0" encoding="UTF-8"?><magicdraw><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" id="_9_5_f720368_1110473546690_766960_8589"><documentation humanName="Documentation" mode="standard">An input stream that contains a stream of values representing an
instance of an SQL structured type or an SQL distinct type.
This interface, used only for custom mapping, is used by the driver
behind the scenes, and a programmer never directly invokes
&lt;code&gt;SQLInput&lt;/code&gt; methods. The &lt;i&gt;reader&lt;/i&gt; methods
(&lt;code&gt;readLong&lt;/code&gt;, &lt;code&gt;readBytes&lt;/code&gt;, and so on)
provide a way to read the values in an &lt;code&gt;SQLInput&lt;/code&gt; object.
The method &lt;code&gt;wasNull&lt;/code&gt; is used to determine whether the
the last value read was SQL &lt;code&gt;NULL&lt;/code&gt;.
&lt;P&gt;When the method &lt;code&gt;getObject&lt;/code&gt; is called with an
object of a class implementing the interface &lt;code&gt;SQLData&lt;/code&gt;,
the JDBC driver calls the method &lt;code&gt;SQLData.getSQLType&lt;/code&gt;
to determine the SQL type of the user-defined type (UDT)
being custom mapped. The driver
creates an instance of &lt;code&gt;SQLInput&lt;/code&gt;, populating it with the
attributes of the UDT.  The driver then passes the input
stream to the method &lt;code&gt;SQLData.readSQL&lt;/code&gt;, which in turn
calls the &lt;code&gt;SQLInput&lt;/code&gt; reader methods
in its implementation for reading the
attributes from the input stream.
@since 1.2
</documentation><isAbstract humanName="Is Abstract">true</isAbstract><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">SQLInput</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="sql" refid="_9_5_f720368_1110473547753_914338_18866"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928309531_986166_6190"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928309531_986166_6190"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_2000410491.jpg" mode="s,e" name="sql" refid="_9_5_f720368_1110473547753_914338_18866"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="sql" refid="_9_5_f720368_1110473547753_914338_18866"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="sql" refid="_9_5_f720368_1110473547753_914338_18866"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::sql::SQLInput</qualifiedName><supplierDependency humanName="Supplier Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::javax::sql::rowset::serial::SQLInputImpl -&gt; JDK 5.0 Classes::java::sql::SQLInput]" refid="_10_5_622020d_1132928323371_989197_16637"/></supplierDependency><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility">public</visibility></interface></magicdraw>