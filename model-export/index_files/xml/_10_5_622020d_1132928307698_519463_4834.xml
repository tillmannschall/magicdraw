<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928307698_519463_4834"><annotatedElement humanName="Annotated Element" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="ThreadMXBean" refid="_10_5_622020d_1132928307688_258318_4832"/></annotatedElement><body humanName="Body" mode="s,e">The management interface for the thread system of
the Java virtual machine.

&lt;p&gt; A Java virtual machine has a single instance of the implementation
class of this interface.  This instance implementing this interface is
an &lt;a href="ManagementFactory.html#MXBean"&gt;MXBean&lt;/a&gt;
that can be obtained by calling
the {@link ManagementFactory#getThreadMXBean} method or
from the {@link ManagementFactory#getPlatformMBeanServer
platform &lt;tt&gt;MBeanServer&lt;/tt&gt;} method.

&lt;p&gt;The &lt;tt&gt;ObjectName&lt;/tt&gt; for uniquely identifying the MXBean for
the thread system within an MBeanServer is:
&lt;blockquote&gt;
{@link ManagementFactory#THREAD_MXBEAN_NAME
&lt;tt&gt;java.lang:type=Threading&lt;/tt&gt;}
&lt;/blockquote&gt;

&lt;h4&gt;Thread ID&lt;/h4&gt;
Thread ID is a positive long value returned by calling the
{@link java.lang.Thread#getId} method for a thread.
The thread ID is unique during its lifetime.  When a thread
is terminated, this thread ID may be reused.

&lt;p&gt; Some methods in this interface take a thread ID or an array
of thread IDs as the input parameter and return per-thread information.

&lt;h4&gt;Thread CPU time&lt;/h4&gt;
A Java virtual machine implementation may support measuring
the CPU time for the current thread, for any thread, or for no threads.

&lt;p&gt;
The {@link #isThreadCpuTimeSupported} method can be used to determine
if a Java virtual machine supports measuring of the CPU time for any
thread.  The {@link #isCurrentThreadCpuTimeSupported} method can
be used to determine if a Java virtual machine supports measuring of
the CPU time for the current  thread.
A Java virtual machine implementation that supports CPU time measurement
for any thread will also support that for the current thread.

&lt;p&gt; The CPU time provided by this interface has nanosecond precision
but not necessarily nanosecond accuracy.

&lt;p&gt;
A Java virtual machine may disable CPU time measurement
by default.
The {@link #isThreadCpuTimeEnabled} and {@link #setThreadCpuTimeEnabled}
methods can be used to test if CPU time measurement is enabled
and to enable/disable this support respectively.
Enabling thread CPU measurement could be expensive in some
Java virtual machine implementations.

&lt;h4&gt;Thread Contention Monitoring&lt;/h4&gt;
Some Java virtual machines may support thread contention monitoring.
The {@link #isThreadContentionMonitoringSupported} method can be used to
determine if a Java virtual machine supports thread contention monitoring.

The thread contention monitoring is disabled by default.  The
{@link #setThreadContentionMonitoringEnabled} method can be used to enable
thread contention monitoring.

@see &lt;a href="../../../javax/management/package-summary.html"&gt;
JMX Specification.&lt;/a&gt;
@see &lt;a href="package-summary.html#examples"&gt;
Ways to Access MXBeans&lt;/a&gt;

@author  Mandy Chung
@version 1.14, 04/29/04
@since   1.5
</body><documentation humanName="Documentation"/><owner classType="Interface" humanName="Owner" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" mode="s,e" name="ThreadMXBean" refid="_10_5_622020d_1132928307688_258318_4832"/><owningElement classType="Interface" humanName="Owning Element" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="ThreadMXBean" refid="_10_5_622020d_1132928307688_258318_4832"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>