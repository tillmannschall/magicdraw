<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" id="_9_5_f720368_1110473546581_851221_6967" refElementId="_9_5_f720368_1110473546581_851221_6967"><clientDependency humanName="Client Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::ComponentOrientation -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928321338_553529_13206" refid="_10_5_622020d_1132928321338_553529_13206"/></clientDependency><documentation humanName="Documentation" mode="s">The ComponentOrientation class encapsulates the language-sensitive
orientation that is to be used to order the elements of a component
or of text. It is used to reflect the differences in this ordering
between Western alphabets, Middle Eastern (such as Hebrew), and Far
Eastern (such as Japanese).
&lt;p&gt;
Fundamentally, this governs items (such as characters) which are laid out
in lines, with the lines then laid out in a block. This also applies
to items in a widget: for example, in a check box where the box is
positioned relative to the text.
&lt;p&gt;
There are four different orientations used in modern languages
as in the following table.&lt;br&gt;
&lt;pre&gt;
LT          RT          TL          TR
A B C       C B A       A D G       G D A
D E F       F E D       B E H       H E B
G H I       I H G       C F I       I F C
&lt;/pre&gt;&lt;br&gt;
(In the header, the two-letter abbreviation represents the item direction
in the first letter, and the line direction in the second. For example,
LT means "items left-to-right, lines top-to-bottom",
BL means "items bottom-to-top, lines bottom-to-top", and so on.)
&lt;p&gt;
The orientations are:
&lt;ul&gt;
&lt;li&gt;LT - Western Europe (optional for Japanese, Chinese, Korean)
&lt;li&gt;RT - Middle East (Arabic, Hebrew)
&lt;li&gt;TR - Japanese, Chinese, Korean
&lt;li&gt;TL - Mongolian
&lt;/ul&gt;
Components whose view and controller code depends on orientation
should use the &lt;code&gt;isLeftToRight()&lt;/code&gt; and
&lt;code&gt;isHorizontal()&lt;/code&gt; methods to
determine their behavior. They should not include switch-like
code that keys off of the constants, such as:
&lt;pre&gt;
if (orientation == LEFT_TO_RIGHT) {
...
} else if (orientation == RIGHT_TO_LEFT) {
...
} else {
Oops
}
&lt;/pre&gt;
This is unsafe, since more constants may be added in the future and
since it is not guaranteed that orientation objects will be unique.
</documentation><interfaceRealization humanName="Interface Realization"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::ComponentOrientation -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928321338_553529_13206" refid="_10_5_622020d_1132928321338_553529_13206"/></interfaceRealization><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">true</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">true</isLeaf><name humanName="Name" mode="s,e">ComponentOrientation</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="awt" refElementId="_9_5_f720368_1110473547268_701783_16331" refid="_9_5_f720368_1110473547268_701783_16331"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="The ComponentOrientation class encapsulates the la..." refElementId="_10_5_622020d_1132928306387_960744_4151" refid="_10_5_622020d_1132928306387_960744_4151"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="The ComponentOrientation class encapsulates the la..." refElementId="_10_5_622020d_1132928306387_960744_4151" refid="_10_5_622020d_1132928306387_960744_4151"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::ComponentOrientation -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928321338_553529_13206" refid="_10_5_622020d_1132928321338_553529_13206"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="awt" refElementId="_9_5_f720368_1110473547268_701783_16331" refid="_9_5_f720368_1110473547268_701783_16331"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="awt" refElementId="_9_5_f720368_1110473547268_701783_16331" refid="_9_5_f720368_1110473547268_701783_16331"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="awt" refElementId="_9_5_f720368_1110473547268_701783_16331" refid="_9_5_f720368_1110473547268_701783_16331"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::awt::ComponentOrientation</qualifiedName><realizedInterfaces humanName="Realized Interface" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="Serializable" refElementId="_9_5_f720368_1110473546612_364919_7481" refid="_9_5_f720368_1110473546612_364919_7481"/></realizedInterfaces><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>