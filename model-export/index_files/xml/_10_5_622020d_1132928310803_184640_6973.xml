<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928310803_184640_6973"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="AbstractSequentialList" refid="_9_5_f720368_1110473546706_888260_8829"/></annotatedElement><body humanName="Body" mode="s,e">This class provides a skeletal implementation of the &lt;tt&gt;List&lt;/tt&gt;
interface to minimize the effort required to implement this interface
backed by a "sequential access" data store (such as a linked list).  For
random access data (such as an array), &lt;tt&gt;AbstractList&lt;/tt&gt; should be used
in preference to this class.&lt;p&gt;

This class is the opposite of the &lt;tt&gt;AbstractList&lt;/tt&gt; class in the sense
that it implements the "random access" methods (&lt;tt&gt;get(int index)&lt;/tt&gt;,
&lt;tt&gt;set(int index, Object element)&lt;/tt&gt;, &lt;tt&gt;set(int index, Object
element)&lt;/tt&gt;, &lt;tt&gt;add(int index, Object element)&lt;/tt&gt; and &lt;tt&gt;remove(int
index)&lt;/tt&gt;) on top of the list's list iterator, instead of the other way
around.&lt;p&gt;

To implement a list the programmer needs only to extend this class and
provide implementations for the &lt;tt&gt;listIterator&lt;/tt&gt; and &lt;tt&gt;size&lt;/tt&gt;
methods.  For an unmodifiable list, the programmer need only implement the
list iterator's &lt;tt&gt;hasNext&lt;/tt&gt;, &lt;tt&gt;next&lt;/tt&gt;, &lt;tt&gt;hasPrevious&lt;/tt&gt;,
&lt;tt&gt;previous&lt;/tt&gt; and &lt;tt&gt;index&lt;/tt&gt; methods.&lt;p&gt;

For a modifiable list the programmer should additionally implement the list
iterator's &lt;tt&gt;set&lt;/tt&gt; method.  For a variable-size list the programmer
should additionally implement the list iterator's &lt;tt&gt;remove&lt;/tt&gt; and
&lt;tt&gt;add&lt;/tt&gt; methods.&lt;p&gt;

The programmer should generally provide a void (no argument) and collection
constructor, as per the recommendation in the &lt;tt&gt;Collection&lt;/tt&gt; interface
specification.&lt;p&gt;

This class is a member of the
&lt;a href="{@docRoot}/../guide/collections/index.html"&gt;
Java Collections Framework&lt;/a&gt;.

@author  Josh Bloch
@author  Neal Gafter
@version 1.33, 02/19/04
@see Collection
@see List
@see AbstractList
@see AbstractCollection
@since 1.2
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_303957224.jpg" mode="s,e" name="AbstractSequentialList" refid="_9_5_f720368_1110473546706_888260_8829"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="AbstractSequentialList" refid="_9_5_f720368_1110473546706_888260_8829"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>