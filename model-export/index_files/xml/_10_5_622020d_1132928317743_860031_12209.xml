<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928317743_860031_12209"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="WrappedPlainView" refid="_9_5_f720368_1110473546784_123949_10551"/></annotatedElement><body humanName="Body" mode="s,e">View of plain text (text with only one font and color)
that does line-wrapping.  This view expects that its
associated element has child elements that represent
the lines it should be wrapping.  It is implemented
as a vertical box that contains logical line views.
The logical line views are nested classes that render
the logical line as multiple physical line if the logical
line is too wide to fit within the allocation.  The
line views draw upon the outer class for its state
to reduce their memory requirements.
&lt;p&gt;
The line views do all of their rendering through the
&lt;code&gt;drawLine&lt;/code&gt; method which in turn does all of
its rendering through the &lt;code&gt;drawSelectedText&lt;/code&gt;
and &lt;code&gt;drawUnselectedText&lt;/code&gt; methods.  This
enables subclasses to easily specialize the rendering
without concern for the layout aspects.

@author  Timothy Prinzing
@version 1.38 05/26/04
@see     View
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_1555793073.jpg" mode="s,e" name="WrappedPlainView" refid="_9_5_f720368_1110473546784_123949_10551"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="WrappedPlainView" refid="_9_5_f720368_1110473546784_123949_10551"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>