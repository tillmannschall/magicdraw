<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928308269_892768_5236" refElementId="_10_5_622020d_1132928308269_892768_5236"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_795627831.jpg" name="CacheRequest" refElementId="_10_5_622020d_1132928308269_285288_5234" refid="_10_5_622020d_1132928308269_285288_5234"/></annotatedElement><body humanName="Body" mode="s,e">Represents channels for storing resources in the
ResponseCache. Instances of such a class provide an
OutputStream object which is called by protocol handlers to
store the resource data into the cache, and also an abort() method
which allows a cache store operation to be interrupted and
abandoned. If an IOException is encountered while reading the
response or writing to the cache, the current cache store operation
will be aborted.

@version 1.1, 03/09/22
@author Yingxian Wang
@since 1.5
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_795627831.jpg" mode="s,e" name="CacheRequest" refElementId="_10_5_622020d_1132928308269_285288_5234" refid="_10_5_622020d_1132928308269_285288_5234"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_795627831.jpg" name="CacheRequest" refElementId="_10_5_622020d_1132928308269_285288_5234" refid="_10_5_622020d_1132928308269_285288_5234"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>