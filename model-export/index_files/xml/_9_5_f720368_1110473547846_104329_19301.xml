<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" id="_9_5_f720368_1110473547846_104329_19301"><UMLClass classType="Class" humanName="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="Pattern" refid="_9_5_f720368_1110473546690_239415_8779"/><documentation humanName="Documentation" mode="standard">Attempts to match a slice in the input using the Boyer-Moore string
matching algorithm. The algorithm is based on the idea that the
pattern can be shifted farther ahead in the search text if it is
matched right to left.
&lt;p&gt;
The pattern is compared to the input one character at a time, from
the rightmost character in the pattern to the left. If the characters
all match the pattern has been found. If a character does not match,
the pattern is shifted right a distance that is the maximum of two
functions, the bad character shift and the good suffix shift. This
shift moves the attempted match position through the input more
quickly than a naive one position at a time check.
&lt;p&gt;
The bad character shift is based on the character from the text that
did not match. If the character does not appear in the pattern, the
pattern can be shifted completely beyond the bad character. If the
character does occur in the pattern, the pattern can be shifted to
line the pattern up with the next occurrence of that character.
&lt;p&gt;
The good suffix shift is based on the idea that some subset on the right
side of the pattern has matched. When a bad character is found, the
pattern can be shifted right by the pattern length if the subset does
not occur again in pattern, or by the amount of distance to the
next occurrence of the subset in the pattern.

Boyer-Moore search methods adapted from code by Amy Yu.
</documentation><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928322380_749112_14671"/></generalization><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">BnM</name><namespace classType="Class" humanName="Namespace" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="Pattern" refid="_9_5_f720368_1110473546690_239415_8779"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928310462_68793_6884"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928322380_749112_14671"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928310462_68793_6884"/></ownedElement><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_1555793073.jpg" mode="s,e" name="Pattern" refid="_9_5_f720368_1110473546690_239415_8779"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::util::regex::Pattern::BnM</qualifiedName><redefinitionContext humanName="Redefinition Context"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="Pattern" refid="_9_5_f720368_1110473546690_239415_8779"/></redefinitionContext><superClass humanName="Super Class"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="Node" refid="_9_5_f720368_1110473547831_77664_19148"/></superClass><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">package</visibility></class></magicdraw>