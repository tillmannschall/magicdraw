<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928305776_717237_3770"><annotatedElement humanName="Annotated Element" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="WindowStateListener" refid="_9_5_f720368_1110473546565_858058_6619"/></annotatedElement><body humanName="Body" mode="s,e">The listener interface for receiving window state events.
&lt;p&gt;
The class that is interested in processing a window state event
either implements this interface (and all the methods it contains)
or extends the abstract &lt;code&gt;WindowAdapter&lt;/code&gt; class
(overriding only the methods of interest).
&lt;p&gt;
The listener object created from that class is then registered with
a window using the &lt;code&gt;Window&lt;/code&gt;'s
&lt;code&gt;addWindowStateListener&lt;/code&gt; method.  When the window's
state changes by virtue of being iconified, maximized etc., the
&lt;code&gt;windowStateChanged&lt;/code&gt; method in the listener object is
invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.

@see java.awt.event.WindowAdapter
@see java.awt.event.WindowEvent

@since 1.4
</body><documentation humanName="Documentation"/><owner classType="Interface" humanName="Owner" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" mode="s,e" name="WindowStateListener" refid="_9_5_f720368_1110473546565_858058_6619"/><owningElement classType="Interface" humanName="Owning Element" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="WindowStateListener" refid="_9_5_f720368_1110473546565_858058_6619"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>