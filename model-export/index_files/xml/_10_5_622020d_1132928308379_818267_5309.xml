<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928308379_818267_5309"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="ProxySelector" refid="_10_5_622020d_1132928308379_163257_5307"/></annotatedElement><body humanName="Body" mode="s,e">Selects the proxy server to use, if any, when connecting to the
network resource referenced by a URL. A proxy selector is a
concrete sub-class of this class and is registered by invoking the
{@link java.net.ProxySelector#setDefault setDefault} method. The
currently registered proxy selector can be retrieved by calling
{@link java.net.ProxySelector#getDefault getDefault} method.

&lt;p&gt; When a proxy selector is registered, for instance, a subclass
of URLConnection class should call the {@link #select select}
method for each URL request so that the proxy selector can decide
if a direct, or proxied connection should be used. The {@link
#select select} method returns an iterator over a collection with
the preferred connection approach.

&lt;p&gt; If a connection cannot be established to a proxy (PROXY or
SOCKS) servers then the caller should call the proxy selector's
{@link #connectFailed connectFailed} method to notify the proxy
selector that the proxy server is unavailable. &lt;/p&gt;

@version 1.3, 03/08/09
@author Yingxian Wang
@author Jean-Christophe Collet
@since 1.5
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_303957224.jpg" mode="s,e" name="ProxySelector" refid="_10_5_622020d_1132928308379_163257_5307"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="ProxySelector" refid="_10_5_622020d_1132928308379_163257_5307"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>