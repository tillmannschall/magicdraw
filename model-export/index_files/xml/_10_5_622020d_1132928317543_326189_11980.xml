<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928317543_326189_11980" refElementId="_10_5_622020d_1132928317543_326189_11980"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="AsyncBoxView" refElementId="_9_5_f720368_1110473546784_803679_10421" refid="_9_5_f720368_1110473546784_803679_10421"/></annotatedElement><body humanName="Body" mode="s,e">A box that does layout asynchronously.  This
is useful to keep the GUI event thread moving by
not doing any layout on it.  The layout is done
on a granularity of operations on the child views.
After each child view is accessed for some part
of layout (a potentially time consuming operation)
the remaining tasks can be abandoned or a new higher
priority task (i.e. to service a synchronous request
or a visible area) can be taken on.
&lt;p&gt;
While the child view is being accessed
a read lock is aquired on the associated document
so that the model is stable while being accessed.

@author  Timothy Prinzing
@version 1.16 12/19/03
@since   1.3
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_555864569.jpg" mode="s,e" name="AsyncBoxView" refElementId="_9_5_f720368_1110473546784_803679_10421" refid="_9_5_f720368_1110473546784_803679_10421"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="AsyncBoxView" refElementId="_9_5_f720368_1110473546784_803679_10421" refid="_9_5_f720368_1110473546784_803679_10421"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>