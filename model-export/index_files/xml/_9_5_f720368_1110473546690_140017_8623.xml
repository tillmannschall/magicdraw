<?xml version="1.0" encoding="UTF-8"?><magicdraw><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" id="_9_5_f720368_1110473546690_140017_8623" refElementId="_9_5_f720368_1110473546690_140017_8623"><documentation humanName="Documentation" mode="s">This interface defines a protocol for bidirectional iteration over text.
The iterator iterates over a bounded sequence of characters.  Characters
are indexed with values beginning with the value returned by getBeginIndex() and
continuing through the value returned by getEndIndex()-1.
&lt;p&gt;
Iterators maintain a current character index, whose valid range is from
getBeginIndex() to getEndIndex(); the value getEndIndex() is included to allow
handling of zero-length text ranges and for historical reasons.
The current index can be retrieved by calling getIndex() and set directly
by calling setIndex(), first(), and last().
&lt;p&gt;
The methods previous() and next() are used for iteration. They return DONE if
they would move outside the range from getBeginIndex() to getEndIndex() -1,
signaling that the iterator has reached the end of the sequence. DONE is
also returned by other methods to indicate that the current index is
outside this range.

&lt;P&gt;Examples:&lt;P&gt;

Traverse the text from start to finish
&lt;pre&gt;
public void traverseForward(CharacterIterator iter) {
for(char c = iter.first(); c != CharacterIterator.DONE; c = iter.next()) {
processChar(c);
}
}
&lt;/pre&gt;

Traverse the text backwards, from end to start
&lt;pre&gt;
public void traverseBackward(CharacterIterator iter) {
for(char c = iter.last(); c != CharacterIterator.DONE; c = iter.previous()) {
processChar(c);
}
}
&lt;/pre&gt;

Traverse both forward and backward from a given position in the text.
Calls to notBoundary() in this example represents some
additional stopping criteria.
&lt;pre&gt;
public void traverseOut(CharacterIterator iter, int pos) {
for (char c = iter.setIndex(pos);
c != CharacterIterator.DONE &amp;&amp; notBoundary(c);
c = iter.next()) {
}
int end = iter.getIndex();
for (char c = iter.setIndex(pos);
c != CharacterIterator.DONE &amp;&amp; notBoundary(c);
c = iter.previous()) {
}
int start = iter.getIndex();
processSection(start, end);
}
&lt;/pre&gt;

@see StringCharacterIterator
@see AttributedCharacterIterator
</documentation><general humanName="General"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="Cloneable" refElementId="_9_5_f720368_1110473546612_888397_7587" refid="_9_5_f720368_1110473546612_888397_7587"/></general><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::java::text::CharacterIterator -&gt; JDK 5.0 Classes::java::lang::Cloneable]" refElementId="_10_5_622020d_1132928321929_171744_14272" refid="_10_5_622020d_1132928321929_171744_14272"/></generalization><isAbstract humanName="Is Abstract">true</isAbstract><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">CharacterIterator</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="text" refElementId="_9_5_f720368_1110473547768_615400_18906" refid="_9_5_f720368_1110473547768_615400_18906"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="This interface defines a protocol for bidirectiona..." refElementId="_10_5_622020d_1132928309561_305986_6222" refid="_10_5_622020d_1132928309561_305986_6222"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::java::text::CharacterIterator -&gt; JDK 5.0 Classes::java::lang::Cloneable]" refElementId="_10_5_622020d_1132928321929_171744_14272" refid="_10_5_622020d_1132928321929_171744_14272"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="This interface defines a protocol for bidirectiona..." refElementId="_10_5_622020d_1132928309561_305986_6222" refid="_10_5_622020d_1132928309561_305986_6222"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="text" refElementId="_9_5_f720368_1110473547768_615400_18906" refid="_9_5_f720368_1110473547768_615400_18906"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="text" refElementId="_9_5_f720368_1110473547768_615400_18906" refid="_9_5_f720368_1110473547768_615400_18906"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="text" refElementId="_9_5_f720368_1110473547768_615400_18906" refid="_9_5_f720368_1110473547768_615400_18906"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::text::CharacterIterator</qualifiedName><supplierDependency humanName="Supplier Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::text::StringCharacterIterator -&gt; JDK 5.0 Classes::java::text::CharacterIterator]" refElementId="_10_5_622020d_1132928321959_682893_14308" refid="_10_5_622020d_1132928321959_682893_14308"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::font::CharArrayIterator -&gt; JDK 5.0 Classes::java::text::CharacterIterator]" refElementId="_10_5_622020d_1132928320617_228047_12968" refid="_10_5_622020d_1132928320617_228047_12968"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::javax::swing::text::Segment -&gt; JDK 5.0 Classes::java::text::CharacterIterator]" refElementId="_10_5_622020d_1132928323882_968638_18078" refid="_10_5_622020d_1132928323882_968638_18078"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::text::RuleBasedBreakIterator::SafeCharIterator -&gt; JDK 5.0 Classes::java::text::CharacterIterator]" refElementId="_10_5_622020d_1132928321959_770607_14304" refid="_10_5_622020d_1132928321959_770607_14304"/></supplierDependency><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility">public</visibility></interface></magicdraw>