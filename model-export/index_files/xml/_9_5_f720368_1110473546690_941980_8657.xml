<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_795627831.jpg" id="_9_5_f720368_1110473546690_941980_8657" refElementId="_9_5_f720368_1110473546690_941980_8657"><clientDependency humanName="Client Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::text::Format -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928321959_738916_14295" refid="_10_5_622020d_1132928321959_738916_14295"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::text::Format -&gt; JDK 5.0 Classes::java::lang::Cloneable]" refElementId="_10_5_622020d_1132928321959_825813_14296" refid="_10_5_622020d_1132928321959_825813_14296"/></clientDependency><documentation humanName="Documentation" mode="s">&lt;code&gt;Format&lt;/code&gt; is an abstract base class for formatting locale-sensitive
information such as dates, messages, and numbers.

&lt;p&gt;
&lt;code&gt;Format&lt;/code&gt; defines the programming interface for formatting
locale-sensitive objects into &lt;code&gt;String&lt;/code&gt;s (the
&lt;code&gt;format&lt;/code&gt; method) and for parsing &lt;code&gt;String&lt;/code&gt;s back
into objects (the &lt;code&gt;parseObject&lt;/code&gt; method).

&lt;p&gt;
Generally, a format's &lt;code&gt;parseObject&lt;/code&gt; method must be able to parse
any string formatted by its &lt;code&gt;format&lt;/code&gt; method. However, there may
be exceptional cases where this is not possible. For example, a
&lt;code&gt;format&lt;/code&gt; method might create two adjacent integer numbers with
no separator in between, and in this case the &lt;code&gt;parseObject&lt;/code&gt; could
not tell which digits belong to which number.

&lt;h4&gt;Subclassing&lt;/h4&gt;

&lt;p&gt;
The Java 2 platform provides three specialized subclasses of &lt;code&gt;Format&lt;/code&gt;--
&lt;code&gt;DateFormat&lt;/code&gt;, &lt;code&gt;MessageFormat&lt;/code&gt;, and
&lt;code&gt;NumberFormat&lt;/code&gt;--for formatting dates, messages, and numbers,
respectively.
&lt;p&gt;
Concrete subclasses must implement three methods:
&lt;ol&gt;
&lt;li&gt; &lt;code&gt;format(Object obj, StringBuffer toAppendTo, FieldPosition pos)&lt;/code&gt;
&lt;li&gt; &lt;code&gt;formatToCharacterIterator(Object obj)&lt;/code&gt;
&lt;li&gt; &lt;code&gt;parseObject(String source, ParsePosition pos)&lt;/code&gt;
&lt;/ol&gt;
These general methods allow polymorphic parsing and formatting of objects
and are used, for example, by &lt;code&gt;MessageFormat&lt;/code&gt;.
Subclasses often also provide additional &lt;code&gt;format&lt;/code&gt; methods for
specific input types as well as &lt;code&gt;parse&lt;/code&gt; methods for specific
result types. Any &lt;code&gt;parse&lt;/code&gt; method that does not take a
&lt;code&gt;ParsePosition&lt;/code&gt; argument should throw &lt;code&gt;ParseException&lt;/code&gt;
when no text in the required format is at the beginning of the input text.

&lt;p&gt;
Most subclasses will also implement the following factory methods:
&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;getInstance&lt;/code&gt; for getting a useful format object appropriate
for the current locale
&lt;li&gt;
&lt;code&gt;getInstance(Locale)&lt;/code&gt; for getting a useful format
object appropriate for the specified locale
&lt;/ol&gt;
In addition, some subclasses may also implement other
&lt;code&gt;getXxxxInstance&lt;/code&gt; methods for more specialized control. For
example, the &lt;code&gt;NumberFormat&lt;/code&gt; class provides
&lt;code&gt;getPercentInstance&lt;/code&gt; and &lt;code&gt;getCurrencyInstance&lt;/code&gt;
methods for getting specialized number formatters.

&lt;p&gt;
Subclasses of &lt;code&gt;Format&lt;/code&gt; that allow programmers to create objects
for locales (with &lt;code&gt;getInstance(Locale)&lt;/code&gt; for example)
must also implement the following class method:
&lt;blockquote&gt;
&lt;pre&gt;
public static Locale[] getAvailableLocales()
&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;p&gt;
And finally subclasses may define a set of constants to identify the various
fields in the formatted output. These constants are used to create a FieldPosition
object which identifies what information is contained in the field and its
position in the formatted result. These constants should be named
&lt;code&gt;&lt;em&gt;item&lt;/em&gt;_FIELD&lt;/code&gt; where &lt;code&gt;&lt;em&gt;item&lt;/em&gt;&lt;/code&gt; identifies
the field. For examples of these constants, see &lt;code&gt;ERA_FIELD&lt;/code&gt; and its
friends in {@link DateFormat}.

&lt;h4&gt;&lt;a name="synchronization"&gt;Synchronization&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;
Formats are generally not synchronized.
It is recommended to create separate format instances for each thread.
If multiple threads access a format concurrently, it must be synchronized
externally.

@see          java.text.ParsePosition
@see          java.text.FieldPosition
@see          java.text.NumberFormat
@see          java.text.DateFormat
@see          java.text.MessageFormat
@version      1.34, 12/19/03
@author       Mark Davis
</documentation><interfaceRealization humanName="Interface Realization"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::text::Format -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928321959_738916_14295" refid="_10_5_622020d_1132928321959_738916_14295"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::text::Format -&gt; JDK 5.0 Classes::java::lang::Cloneable]" refElementId="_10_5_622020d_1132928321959_825813_14296" refid="_10_5_622020d_1132928321959_825813_14296"/></interfaceRealization><isAbstract humanName="Is Abstract" mode="s,e">true</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><member humanName="Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Field" refElementId="_9_5_f720368_1110473547784_45961_18947" refid="_9_5_f720368_1110473547784_45961_18947"/><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="FieldDelegate" refElementId="_9_5_f720368_1110473547784_970079_18950" refid="_9_5_f720368_1110473547784_970079_18950"/></member><name humanName="Name" mode="s,e">Format</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="text" refElementId="_9_5_f720368_1110473547768_615400_18906" refid="_9_5_f720368_1110473547768_615400_18906"/><nestedClassifier humanName="Nested Classifier"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Field" refElementId="_9_5_f720368_1110473547784_45961_18947" refid="_9_5_f720368_1110473547784_45961_18947"/><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="FieldDelegate" refElementId="_9_5_f720368_1110473547784_970079_18950" refid="_9_5_f720368_1110473547784_970079_18950"/></nestedClassifier><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="&lt;code&gt;Format&lt;/code&gt; is an abstract base class for ..." refElementId="_10_5_622020d_1132928309711_851178_6258" refid="_10_5_622020d_1132928309711_851178_6258"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="&lt;code&gt;Format&lt;/code&gt; is an abstract base class for ..." refElementId="_10_5_622020d_1132928309711_851178_6258" refid="_10_5_622020d_1132928309711_851178_6258"/><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Field" refElementId="_9_5_f720368_1110473547784_45961_18947" refid="_9_5_f720368_1110473547784_45961_18947"/><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="FieldDelegate" refElementId="_9_5_f720368_1110473547784_970079_18950" refid="_9_5_f720368_1110473547784_970079_18950"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::text::Format -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928321959_738916_14295" refid="_10_5_622020d_1132928321959_738916_14295"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::text::Format -&gt; JDK 5.0 Classes::java::lang::Cloneable]" refElementId="_10_5_622020d_1132928321959_825813_14296" refid="_10_5_622020d_1132928321959_825813_14296"/></ownedElement><ownedMember humanName="Owned Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Field" refElementId="_9_5_f720368_1110473547784_45961_18947" refid="_9_5_f720368_1110473547784_45961_18947"/><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="FieldDelegate" refElementId="_9_5_f720368_1110473547784_970079_18950" refid="_9_5_f720368_1110473547784_970079_18950"/></ownedMember><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="text" refElementId="_9_5_f720368_1110473547768_615400_18906" refid="_9_5_f720368_1110473547768_615400_18906"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="text" refElementId="_9_5_f720368_1110473547768_615400_18906" refid="_9_5_f720368_1110473547768_615400_18906"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="text" refElementId="_9_5_f720368_1110473547768_615400_18906" refid="_9_5_f720368_1110473547768_615400_18906"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::text::Format</qualifiedName><realizedInterfaces humanName="Realized Interface" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="Serializable" refElementId="_9_5_f720368_1110473546612_364919_7481" refid="_9_5_f720368_1110473546612_364919_7481"/><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="Cloneable" refElementId="_9_5_f720368_1110473546612_888397_7587" refid="_9_5_f720368_1110473546612_888397_7587"/></realizedInterfaces><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>