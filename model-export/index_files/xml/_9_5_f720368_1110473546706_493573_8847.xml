<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" id="_9_5_f720368_1110473546706_493573_8847"><documentation humanName="Documentation" mode="standard">This exception may be thrown by methods that have detected concurrent
modification of an object when such modification is not permissible.
&lt;p&gt;
For example, it is not generally permissible for one thread to modify a Collection
while another thread is iterating over it.  In general, the results of the
iteration are undefined under these circumstances.  Some Iterator
implementations (including those of all the general purpose collection implementations
provided by the JRE) may choose to throw this exception if this behavior is
detected.  Iterators that do this are known as &lt;i&gt;fail-fast&lt;/i&gt; iterators,
as they fail quickly and cleanly, rather that risking arbitrary,
non-deterministic behavior at an undetermined time in the future.
&lt;p&gt;
Note that this exception does not always indicate that an object has
been concurrently modified by a &lt;i&gt;different&lt;/i&gt; thread.  If a single
thread issues a sequence of method invocations that violates the
contract of an object, the object may throw this exception.  For
example, if a thread modifies a collection directly while it is
iterating over the collection with a fail-fast iterator, the iterator
will throw this exception.

&lt;p&gt;Note that fail-fast behavior cannot be guaranteed as it is, generally
speaking, impossible to make any hard guarantees in the presence of
unsynchronized concurrent modification.  Fail-fast operations
throw &lt;tt&gt;ConcurrentModificationException&lt;/tt&gt; on a best-effort basis.
Therefore, it would be wrong to write a program that depended on this
exception for its correctness: &lt;i&gt;&lt;tt&gt;ConcurrentModificationException&lt;/tt&gt;
should be used only to detect bugs.&lt;/i&gt;

@author  Josh Bloch
@version 1.18, 06/22/04
@see	    Collection
@see     Iterator
@see     ListIterator
@see	    Vector
@see	    LinkedList
@see	    HashSet
@see	    Hashtable
@see	    TreeMap
@see	    AbstractList
@since   1.2
</documentation><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928322540_868232_14894"/></generalization><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">ConcurrentModificationException</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928310923_561753_7169"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928322540_868232_14894"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928310923_561753_7169"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_2000410491.jpg" mode="s,e" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::util::ConcurrentModificationException</qualifiedName><superClass humanName="Super Class"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="RuntimeException" refid="_9_5_f720368_1110473546612_799782_7673"/></superClass><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>