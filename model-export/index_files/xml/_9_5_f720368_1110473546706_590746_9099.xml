<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_303957224.jpg" id="_9_5_f720368_1110473546706_590746_9099"><documentation humanName="Documentation" mode="standard">An abstract superclass for parsing and decoding of images.  This
class must be subclassed by classes that read in images in the
context of the Java Image I/O framework.

&lt;p&gt; &lt;code&gt;ImageReader&lt;/code&gt; objects are normally instantiated by
the service provider interface (SPI) class for the specific format.
Service provider classes (e.g., instances of
&lt;code&gt;ImageReaderSpi&lt;/code&gt;) are registered with the
&lt;code&gt;IIORegistry&lt;/code&gt;, which uses them for format recognition
and presentation of available format readers and writers.

&lt;p&gt; When an input source is set (using the &lt;code&gt;setInput&lt;/code&gt;
method), it may be marked as "seek forward only".  This setting
means that images contained within the input source will only be
read in order, possibly allowing the reader to avoid caching
portions of the input containing data associated with images that
have been read previously.

@see ImageWriter
@see javax.imageio.spi.IIORegistry
@see javax.imageio.spi.ImageReaderSpi

@version 0.5
</documentation><isAbstract humanName="Is Abstract" mode="s,e">true</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">ImageReader</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="imageio" refid="_9_5_f720368_1110473547924_635917_19843"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928314859_209301_9257"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928314859_209301_9257"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_2000410491.jpg" mode="s,e" name="imageio" refid="_9_5_f720368_1110473547924_635917_19843"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="imageio" refid="_9_5_f720368_1110473547924_635917_19843"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="imageio" refid="_9_5_f720368_1110473547924_635917_19843"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::javax::imageio::ImageReader</qualifiedName><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>