<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_795627831.jpg" id="_9_5_f720368_1110473546565_998838_6563" refElementId="_9_5_f720368_1110473546565_998838_6563"><clientDependency humanName="Client Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::event::HierarchyBoundsAdapter -&gt; JDK 5.0 Classes::java::awt::event::HierarchyBoundsListener]" refElementId="_10_5_622020d_1132928320577_70052_12937" refid="_10_5_622020d_1132928320577_70052_12937"/></clientDependency><documentation humanName="Documentation" mode="s">An abstract adapter class for receiving ancestor moved and resized events.
The methods in this class are empty. This class exists as a
convenience for creating listener objects.
&lt;p&gt;
Extend this class and override the method for the event of interest. (If
you implement the &lt;code&gt;HierarchyBoundsListener&lt;/code&gt; interface, you have
to define both methods in it. This abstract class defines null methods for
them both, so you only have to define the method for the event you care
about.)
&lt;p&gt;
Create a listener object using your class and then register it with a
Component using the Component's &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt;
method. When the hierarchy to which the Component belongs changes by
resize or movement of an ancestor, the relevant method in the listener
object is invoked, and the &lt;code&gt;HierarchyEvent&lt;/code&gt; is passed to it.

@author	David Mendenhall
@version	1.7, 12/19/03
@see		HierarchyBoundsListener
@see		HierarchyEvent
@since 	1.3
</documentation><interfaceRealization humanName="Interface Realization"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::event::HierarchyBoundsAdapter -&gt; JDK 5.0 Classes::java::awt::event::HierarchyBoundsListener]" refElementId="_10_5_622020d_1132928320577_70052_12937" refid="_10_5_622020d_1132928320577_70052_12937"/></interfaceRealization><isAbstract humanName="Is Abstract" mode="s,e">true</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">HierarchyBoundsAdapter</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="event" refElementId="_9_5_f720368_1110473547284_7684_16441" refid="_9_5_f720368_1110473547284_7684_16441"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="An abstract adapter class for receiving ancestor m..." refElementId="_10_5_622020d_1132928305726_331161_3715" refid="_10_5_622020d_1132928305726_331161_3715"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="An abstract adapter class for receiving ancestor m..." refElementId="_10_5_622020d_1132928305726_331161_3715" refid="_10_5_622020d_1132928305726_331161_3715"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::event::HierarchyBoundsAdapter -&gt; JDK 5.0 Classes::java::awt::event::HierarchyBoundsListener]" refElementId="_10_5_622020d_1132928320577_70052_12937" refid="_10_5_622020d_1132928320577_70052_12937"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="event" refElementId="_9_5_f720368_1110473547284_7684_16441" refid="_9_5_f720368_1110473547284_7684_16441"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="event" refElementId="_9_5_f720368_1110473547284_7684_16441" refid="_9_5_f720368_1110473547284_7684_16441"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="event" refElementId="_9_5_f720368_1110473547284_7684_16441" refid="_9_5_f720368_1110473547284_7684_16441"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::awt::event::HierarchyBoundsAdapter</qualifiedName><realizedInterfaces humanName="Realized Interface" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="HierarchyBoundsListener" refElementId="_9_5_f720368_1110473546565_800273_6565" refid="_9_5_f720368_1110473546565_800273_6565"/></realizedInterfaces><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>