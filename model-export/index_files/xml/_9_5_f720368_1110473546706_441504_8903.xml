<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" id="_9_5_f720368_1110473546706_441504_8903"><documentation humanName="Documentation" mode="standard">The &lt;code&gt;Properties&lt;/code&gt; class represents a persistent set of
properties. The &lt;code&gt;Properties&lt;/code&gt; can be saved to a stream
or loaded from a stream. Each key and its corresponding value in
the property list is a string.
&lt;p&gt;
A property list can contain another property list as its
"defaults"; this second property list is searched if
the property key is not found in the original property list.
&lt;p&gt;
Because &lt;code&gt;Properties&lt;/code&gt; inherits from &lt;code&gt;Hashtable&lt;/code&gt;, the
&lt;code&gt;put&lt;/code&gt; and &lt;code&gt;putAll&lt;/code&gt; methods can be applied to a
&lt;code&gt;Properties&lt;/code&gt; object.  Their use is strongly discouraged as they
allow the caller to insert entries whose keys or values are not
&lt;code&gt;Strings&lt;/code&gt;.  The &lt;code&gt;setProperty&lt;/code&gt; method should be used
instead.  If the &lt;code&gt;store&lt;/code&gt; or &lt;code&gt;save&lt;/code&gt; method is called
on a "compromised" &lt;code&gt;Properties&lt;/code&gt; object that contains a
non-&lt;code&gt;String&lt;/code&gt; key or value, the call will fail.
&lt;p&gt;
&lt;a name="encoding"&gt;&lt;/a&gt;
&lt;p&gt; The {@link #load load} and {@link #store store} methods load and store
properties in a simple line-oriented format specified below.  This format
uses the ISO 8859-1 character encoding.  Characters that cannot be directly
represented in this encoding can be written using
&lt;a href="http://java.sun.com/docs/books/jls/html/3.doc.html#100850"&gt;Unicode escapes&lt;/a&gt;
; only a single 'u' character is allowed in an escape
sequence. The native2ascii tool can be used to convert property files to and
from other character encodings.
&lt;p&gt;
&lt;p&gt; The {@link #loadFromXML(InputStream)} and {@link
#storeToXML(OutputStream, String, String)} methods load and store properties
in a simple XML format.  By default the UTF-8 character encoding is used,
however a specific encoding may be specified if required.  An XML properties
document has the following DOCTYPE declaration:

&lt;pre&gt;
&lt;!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd"&gt;
&lt;/pre&gt;
Note that the system URI (http://java.sun.com/dtd/properties.dtd) is
&lt;i&gt;not&lt;/i&gt; accessed when exporting or importing properties; it merely
serves as a string to uniquely identify the DTD, which is:
&lt;pre&gt;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!-- DTD for properties --&gt;

&lt;!ELEMENT properties ( comment?, entry* ) &gt;

&lt;!ATTLIST properties version CDATA #FIXED "1.0"&gt;

&lt;!ELEMENT comment (#PCDATA) &gt;

&lt;!ELEMENT entry (#PCDATA) &gt;

&lt;!ATTLIST entry key CDATA #REQUIRED&gt;
&lt;/pre&gt;

@see &lt;a href="../../../tooldocs/solaris/native2ascii.html"&gt;native2ascii tool for Solaris&lt;/a&gt;
@see &lt;a href="../../../tooldocs/windows/native2ascii.html"&gt;native2ascii tool for Windows&lt;/a&gt;

@author  Arthur van Hoff
@author  Michael McCloskey
@version 1.84, 05/18/04
@since   JDK1.0
</documentation><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928322620_254419_15080"/></generalization><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><member humanName="Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="LineReader" refid="_10_5_622020d_1132928313347_204994_7420"/></member><name humanName="Name" mode="s,e">Properties</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><nestedClassifier humanName="Nested Classifier"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="LineReader" refid="_10_5_622020d_1132928313347_204994_7420"/></nestedClassifier><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928313347_679760_7422"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928322620_254419_15080"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928313347_679760_7422"/><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="LineReader" refid="_10_5_622020d_1132928313347_204994_7420"/></ownedElement><ownedMember humanName="Owned Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="LineReader" refid="_10_5_622020d_1132928313347_204994_7420"/></ownedMember><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_2000410491.jpg" mode="s,e" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::util::Properties</qualifiedName><superClass humanName="Super Class"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="Hashtable&lt;Object, Object&gt;" refid="_10_5_622020d_1132928322620_276390_15076"/></superClass><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>