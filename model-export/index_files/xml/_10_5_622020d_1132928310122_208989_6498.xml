<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928310122_208989_6498" refElementId="_10_5_622020d_1132928310122_208989_6498"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="ConcurrentLinkedQueue" refElementId="_10_5_622020d_1132928310112_379492_6488" refid="_10_5_622020d_1132928310112_379492_6488"/></annotatedElement><body humanName="Body" mode="s,e">An unbounded thread-safe {@linkplain Queue queue} based on linked nodes.
This queue orders elements FIFO (first-in-first-out).
The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the
queue the longest time.
The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the
queue the shortest time. New elements
are inserted at the tail of the queue, and the queue retrieval
operations obtain elements at the head of the queue.
A &lt;tt&gt;ConcurrentLinkedQueue&lt;/tt&gt; is an appropriate choice when
many threads will share access to a common collection.
This queue does not permit &lt;tt&gt;null&lt;/tt&gt; elements.

&lt;p&gt;This implementation employs an efficient "wait-free"
algorithm based on one described in &lt;a
href="http://www.cs.rochester.edu/u/michael/PODC96.html"&gt; Simple,
Fast, and Practical Non-Blocking and Blocking Concurrent Queue
Algorithms&lt;/a&gt; by Maged M. Michael and Michael L. Scott.

&lt;p&gt;Beware that, unlike in most collections, the &lt;tt&gt;size&lt;/tt&gt; method
is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the
asynchronous nature of these queues, determining the current number
of elements requires a traversal of the elements.

&lt;p&gt;This class and its iterator implement all of the
&lt;em&gt;optional&lt;/em&gt; methods of the {@link Collection} and {@link
Iterator} interfaces.

&lt;p&gt;This class is a member of the
&lt;a href="{@docRoot}/../guide/collections/index.html"&gt;
Java Collections Framework&lt;/a&gt;.

@since 1.5
@author Doug Lea
@param &lt;E&gt; the type of elements held in this collection

</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_555864569.jpg" mode="s,e" name="ConcurrentLinkedQueue" refElementId="_10_5_622020d_1132928310112_379492_6488" refid="_10_5_622020d_1132928310112_379492_6488"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="ConcurrentLinkedQueue" refElementId="_10_5_622020d_1132928310112_379492_6488" refid="_10_5_622020d_1132928310112_379492_6488"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>