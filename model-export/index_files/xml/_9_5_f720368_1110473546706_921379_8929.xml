<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" id="_9_5_f720368_1110473546706_921379_8929"><clientDependency humanName="Client Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::StringTokenizer -&gt; JDK 5.0 Classes::java::util::Enumeration&lt;Object&gt;]" refid="_10_5_622020d_1132928322630_205842_15107"/></clientDependency><documentation humanName="Documentation" mode="standard">The string tokenizer class allows an application to break a
string into tokens. The tokenization method is much simpler than
the one used by the &lt;code&gt;StreamTokenizer&lt;/code&gt; class. The
&lt;code&gt;StringTokenizer&lt;/code&gt; methods do not distinguish among
identifiers, numbers, and quoted strings, nor do they recognize
and skip comments.
&lt;p&gt;
The set of delimiters (the characters that separate tokens) may
be specified either at creation time or on a per-token basis.
&lt;p&gt;
An instance of &lt;code&gt;StringTokenizer&lt;/code&gt; behaves in one of two
ways, depending on whether it was created with the
&lt;code&gt;returnDelims&lt;/code&gt; flag having the value &lt;code&gt;true&lt;/code&gt;
or &lt;code&gt;false&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;If the flag is &lt;code&gt;false&lt;/code&gt;, delimiter characters serve to
separate tokens. A token is a maximal sequence of consecutive
characters that are not delimiters.
&lt;li&gt;If the flag is &lt;code&gt;true&lt;/code&gt;, delimiter characters are themselves
considered to be tokens. A token is thus either one delimiter
character, or a maximal sequence of consecutive characters that are
not delimiters.
&lt;/ul&gt;&lt;p&gt;
A &lt;tt&gt;StringTokenizer&lt;/tt&gt; object internally maintains a current
position within the string to be tokenized. Some operations advance this
current position past the characters processed.&lt;p&gt;
A token is returned by taking a substring of the string that was used to
create the &lt;tt&gt;StringTokenizer&lt;/tt&gt; object.
&lt;p&gt;
The following is one example of the use of the tokenizer. The code:
&lt;blockquote&gt;&lt;pre&gt;
StringTokenizer st = new StringTokenizer("this is a test");
while (st.hasMoreTokens()) {
System.out.println(st.nextToken());
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
prints the following output:
&lt;blockquote&gt;&lt;pre&gt;
this
is
a
test
&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p&gt;
&lt;tt&gt;StringTokenizer&lt;/tt&gt; is a legacy class that is retained for
compatibility reasons although its use is discouraged in new code. It is
recommended that anyone seeking this functionality use the &lt;tt&gt;split&lt;/tt&gt;
method of &lt;tt&gt;String&lt;/tt&gt; or the java.util.regex package instead.
&lt;p&gt;
The following example illustrates how the &lt;tt&gt;String.split&lt;/tt&gt;
method can be used to break up a string into its basic tokens:
&lt;blockquote&gt;&lt;pre&gt;
String[] result = "this is a test".split("\\s");
for (int x=0; x&lt;result.length; x++)
System.out.println(result[x]);
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
prints the following output:
&lt;blockquote&gt;&lt;pre&gt;
this
is
a
test
&lt;/pre&gt;&lt;/blockquote&gt;

@author  unascribed
@version 1.34, 05/05/04
@see     java.io.StreamTokenizer
@since   JDK1.0
</documentation><interfaceRealization humanName="Interface Realization"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::StringTokenizer -&gt; JDK 5.0 Classes::java::util::Enumeration&lt;Object&gt;]" refid="_10_5_622020d_1132928322630_205842_15107"/></interfaceRealization><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">StringTokenizer</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928313477_71408_7484"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928313477_71408_7484"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::StringTokenizer -&gt; JDK 5.0 Classes::java::util::Enumeration&lt;Object&gt;]" refid="_10_5_622020d_1132928322630_205842_15107"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_2000410491.jpg" mode="s,e" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="util" refid="_9_5_f720368_1110473547799_165814_19031"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::util::StringTokenizer</qualifiedName><realizedInterfaces humanName="Realized Interface" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="Enumeration&lt;Object&gt;" refid="_10_5_622020d_1132928322580_607670_14982"/></realizedInterfaces><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>