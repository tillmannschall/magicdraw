<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928317863_125341_12375"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="InputVerifier" refid="_9_5_f720368_1110473546784_346709_10699"/></annotatedElement><body humanName="Body" mode="s,e">The purpose of this class is to help clients support smooth focus
navigation through GUIs with text fields. Such GUIs often need
to ensure that the text entered by the user is valid (for example,
that it's in
the proper format) before allowing the user to navigate out of
the text field. To do this, clients create a subclass of
&lt;code&gt;InputVerifier&lt;/code&gt; and, using &lt;code&gt;JComponent&lt;/code&gt;'s
&lt;code&gt;setInputVerifier&lt;/code&gt; method,
attach an instance of their subclass to the &lt;code&gt;JComponent&lt;/code&gt; whose input they
want to validate. Before focus is transfered to another Swing component
that requests it, the input verifier's &lt;code&gt;shouldYieldFocus&lt;/code&gt; method is
called.  Focus is transfered only if that method returns &lt;code&gt;true&lt;/code&gt;.
&lt;p&gt;
The following example has two text fields, with the first one expecting
the string "pass" to be entered by the user. If that string is entered in
the first text field, then the user can advance to the second text field
either by clicking in it or by pressing TAB. However, if another string
is entered in the first text field, then the user will be unable to
transfer focus to the second text field.
&lt;p&gt;
&lt;pre&gt;
import java.awt.*;
import java.util.*;
import java.awt.event.*;
import javax.swing.*;

This program demonstrates the use of the Swing InputVerifier class.
It creates two text fields; the first of the text fields expects the
string "pass" as input, and will allow focus to advance out of it
only after that string is typed in by the user.

public class VerifierTest extends JFrame {
public VerifierTest() {
JTextField tf1 = new JTextField ("Type \"pass\" here");
getContentPane().add (tf1, BorderLayout.NORTH);
tf1.setInputVerifier(new PassVerifier());

JTextField tf2 = new JTextField ("TextField2");
getContentPane().add (tf2, BorderLayout.SOUTH);

WindowListener l = new WindowAdapter() {
public void windowClosing(WindowEvent e) {
System.exit(0);
}
};
addWindowListener(l);
}

class PassVerifier extends InputVerifier {
public boolean verify(JComponent input) {
JTextField tf = (JTextField) input;
return "pass".equals(tf.getText());
}
}

public static void main(String[] args) {
Frame f = new VerifierTest();
f.pack();
f.setVisible(true);
}
}
&lt;/pre&gt;

@since 1.3
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_303957224.jpg" mode="s,e" name="InputVerifier" refid="_9_5_f720368_1110473546784_346709_10699"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="InputVerifier" refid="_9_5_f720368_1110473546784_346709_10699"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>