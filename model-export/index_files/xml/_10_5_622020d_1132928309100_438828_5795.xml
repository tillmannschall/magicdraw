<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928309100_438828_5795" refElementId="_10_5_622020d_1132928309100_438828_5795"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="CertPathBuilderException" refElementId="_9_5_f720368_1110473546674_181549_8291" refid="_9_5_f720368_1110473546674_181549_8291"/></annotatedElement><body humanName="Body" mode="s,e">An exception indicating one of a variety of problems encountered when
building a certification path with a &lt;code&gt;CertPathBuilder&lt;/code&gt;.
&lt;p&gt;
A &lt;code&gt;CertPathBuilderException&lt;/code&gt; provides support for wrapping
exceptions. The {@link #getCause getCause} method returns the throwable,
if any, that caused this exception to be thrown.
&lt;p&gt;
&lt;b&gt;Concurrent Access&lt;/b&gt;
&lt;p&gt;
Unless otherwise specified, the methods defined in this class are not
thread-safe. Multiple threads that need to access a single
object concurrently should synchronize amongst themselves and
provide the necessary locking. Multiple threads each manipulating
separate objects need not synchronize.

@see CertPathBuilder

@version 	1.7 12/19/03
@since	1.4
@author 	Sean Mullan
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_555864569.jpg" mode="s,e" name="CertPathBuilderException" refElementId="_9_5_f720368_1110473546674_181549_8291" refid="_9_5_f720368_1110473546674_181549_8291"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="CertPathBuilderException" refElementId="_9_5_f720368_1110473546674_181549_8291" refid="_9_5_f720368_1110473546674_181549_8291"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>