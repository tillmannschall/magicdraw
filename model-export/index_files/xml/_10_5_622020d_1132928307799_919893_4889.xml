<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928307799_919893_4889" refElementId="_10_5_622020d_1132928307799_919893_4889"><annotatedElement humanName="Annotated Element" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="InvocationHandler" refElementId="_9_5_f720368_1110473546612_149432_7531" refid="_9_5_f720368_1110473546612_149432_7531"/></annotatedElement><body humanName="Body" mode="s,e">&lt;code&gt;InvocationHandler&lt;/code&gt; is the interface implemented by
the &lt;i&gt;invocation handler&lt;/i&gt; of a proxy instance.

&lt;p&gt;Each proxy instance has an associated invocation handler.
When a method is invoked on a proxy instance, the method
invocation is encoded and dispatched to the &lt;code&gt;invoke&lt;/code&gt;
method of its invocation handler.

@author	Peter Jones
@version	1.9, 03/12/19
@see		Proxy
@since	JDK1.3
</body><documentation humanName="Documentation"/><owner classType="Interface" humanName="Owner" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" mode="s,e" name="InvocationHandler" refElementId="_9_5_f720368_1110473546612_149432_7531" refid="_9_5_f720368_1110473546612_149432_7531"/><owningElement classType="Interface" humanName="Owning Element" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="InvocationHandler" refElementId="_9_5_f720368_1110473546612_149432_7531" refid="_9_5_f720368_1110473546612_149432_7531"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>