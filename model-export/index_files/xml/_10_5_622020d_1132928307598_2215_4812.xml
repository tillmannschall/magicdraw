<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928307598_2215_4812"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="MemoryNotificationInfo" refid="_10_5_622020d_1132928307598_614261_4810"/></annotatedElement><body humanName="Body" mode="s,e">The information about a memory notification.

&lt;p&gt;
A memory notification is emitted by {@link MemoryMXBean}
when the Java virtual machine detects that the memory usage
of a memory pool is exceeding a threshold value.
The notification emitted will contain the memory notification
information about the detected condition:
&lt;ul&gt;
&lt;li&gt;The name of the memory pool.&lt;/li&gt;
&lt;li&gt;The memory usage of the memory pool when the notification
was constructed.&lt;/li&gt;
&lt;li&gt;The number of times that the memory usage has crossed
a threshold when the notification was constructed.
For usage threshold notifications, this count will be the
{@link MemoryPoolMXBean#getUsageThresholdCount usage threshold
count}.  For collection threshold notifications,
this count will be the
{@link MemoryPoolMXBean#getCollectionUsageThresholdCount
collection usage threshold count}.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
A {@link CompositeData CompositeData} representing
the &lt;tt&gt;MemoryNotificationInfo&lt;/tt&gt; object
is stored in the
{@link javax.management.Notification#setUserData user data}
of a {@link javax.management.Notification notification}.
The {@link #from from} method is provided to convert from
a &lt;tt&gt;CompositeData&lt;/tt&gt; to a &lt;tt&gt;MemoryNotificationInfo&lt;/tt&gt;
object. For example:

&lt;blockquote&gt;&lt;pre&gt;
Notification notif;

receive the notification emitted by MemoryMXBean and set to notif
...

String notifType = notif.getType();
if (notifType.equals(MemoryNotificationInfo.MEMORY_THRESHOLD_EXCEEDED) ||
notifType.equals(MemoryNotificationInfo.MEMORY_COLLECTION_THRESHOLD_EXCEEDED)) {
retrieve the memory notification information
CompositeData cd = (CompositeData) notif.getUserData();
MemoryNotificationInfo info = MemoryNotificationInfo.from(cd);
....
}
&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p&gt;
The types of notifications emitted by &lt;tt&gt;MemoryMXBean&lt;/tt&gt; are:
&lt;ul&gt;
&lt;li&gt;A {@link #MEMORY_THRESHOLD_EXCEEDED
usage threshold exceeded notification}.
&lt;br&gt;This notification will be emitted when
the memory usage of a memory pool is increased and has reached
or exceeded its
&lt;a href="MemoryPoolMXBean#UsageThreshold"&gt; usage threshold&lt;/a&gt; value.
Subsequent crossing of the usage threshold value does not cause
further notification until the memory usage has returned
to become less than the usage threshold value.
&lt;p&gt;&lt;/li&gt;
&lt;li&gt;A {@link #MEMORY_COLLECTION_THRESHOLD_EXCEEDED
collection usage threshold exceeded notification}.
&lt;br&gt;This notification will be emitted when
the memory usage of a memory pool is greater than or equal to its
&lt;a href="MemoryPoolMXBean#CollectionThreshold"&gt;
collection usage threshold&lt;/a&gt; after the Java virtual machine
has expended effort in recycling unused objects in that
memory pool.&lt;/li&gt;
&lt;/ul&gt;

@author  Mandy Chung
@version 1.6, 04/18/04
@since   1.5

</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_1555793073.jpg" mode="s,e" name="MemoryNotificationInfo" refid="_10_5_622020d_1132928307598_614261_4810"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="MemoryNotificationInfo" refid="_10_5_622020d_1132928307598_614261_4810"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>