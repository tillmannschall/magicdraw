<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" id="_9_5_f720368_1110473546674_539854_8253"><documentation humanName="Documentation" mode="standard">An &lt;code&gt;UnmarshalException&lt;/code&gt; can be thrown while unmarshalling the
parameters or results of a remote method call if any of the following
conditions occur:
&lt;ul&gt;
&lt;li&gt; if an exception occurs while unmarshalling the call header
&lt;li&gt; if the protocol for the return value is invalid
&lt;li&gt; if a &lt;code&gt;java.io.IOException&lt;/code&gt; occurs unmarshalling
parameters (on the server side) or the return value (on the client side).
&lt;li&gt; if a &lt;code&gt;java.lang.ClassNotFoundException&lt;/code&gt; occurs during
unmarshalling parameters or return values
&lt;li&gt; if no skeleton can be loaded on the server-side; note that skeletons
are required in the 1.1 stub protocol, but not in the 1.2 stub protocol.
&lt;li&gt; if the method hash is invalid (i.e., missing method).
&lt;li&gt; if there is a failure to create a remote reference object for
a remote object's stub when it is unmarshalled.
&lt;/ul&gt;

@version 1.12, 12/19/03
@author  Ann Wollrath
@since   JDK1.1
</documentation><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928321849_480064_14099"/></generalization><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">UnmarshalException</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="rmi" refid="_9_5_f720368_1110473547690_766614_18431"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928309070_901719_5755"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928321849_480064_14099"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928309070_901719_5755"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_2000410491.jpg" mode="s,e" name="rmi" refid="_9_5_f720368_1110473547690_766614_18431"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="rmi" refid="_9_5_f720368_1110473547690_766614_18431"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="rmi" refid="_9_5_f720368_1110473547690_766614_18431"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::rmi::UnmarshalException</qualifiedName><superClass humanName="Super Class"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="RemoteException" refid="_9_5_f720368_1110473546674_284651_8235"/></superClass><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>