<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928307118_344630_4606"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="InputStreamReader" refid="_9_5_f720368_1110473546596_297546_7417"/></annotatedElement><body humanName="Body" mode="s,e">An InputStreamReader is a bridge from byte streams to character streams: It
reads bytes and decodes them into characters using a specified {@link
java.nio.charset.Charset &lt;code&gt;charset&lt;/code&gt;}.  The charset that it uses
may be specified by name or may be given explicitly, or the platform's
default charset may be accepted.

&lt;p&gt; Each invocation of one of an InputStreamReader's read() methods may
cause one or more bytes to be read from the underlying byte-input stream.
To enable the efficient conversion of bytes to characters, more bytes may
be read ahead from the underlying stream than are necessary to satisfy the
current read operation.

&lt;p&gt; For top efficiency, consider wrapping an InputStreamReader within a
BufferedReader.  For example:

&lt;pre&gt;
BufferedReader in
= new BufferedReader(new InputStreamReader(System.in));
&lt;/pre&gt;

@see BufferedReader
@see InputStream
@see java.nio.charset.Charset

@version     1.44, 03/12/19
@author      Mark Reinhold
@since       JDK1.1
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_1555793073.jpg" mode="s,e" name="InputStreamReader" refid="_9_5_f720368_1110473546596_297546_7417"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="InputStreamReader" refid="_9_5_f720368_1110473546596_297546_7417"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>