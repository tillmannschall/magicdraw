<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" id="_9_5_f720368_1110473546768_317516_10307" refElementId="_9_5_f720368_1110473546768_317516_10307"><documentation humanName="Documentation" mode="s">A Parser for HTML Documents (actually, you can specify a DTD, but
you should really only use this class with the html dtd in swing).
Reads an InputStream of HTML and
invokes the appropriate methods in the ParserCallback class. This
is the default parser used by HTMLEditorKit to parse HTML url's.
&lt;p&gt;This will message the callback for all valid tags, as well as
tags that are implied but not explicitly specified. For example, the
html string (&lt;p&gt;blah) only has a p tag defined. The callback
will see the following methods:
&lt;ol&gt;&lt;li&gt;&lt;i&gt;handleStartTag(html, ...)&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;handleStartTag(head, ...)&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;handleEndTag(head)&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;handleStartTag(body, ...)&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;handleStartTag(p, ...)&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;handleText(...)&lt;/li&gt;
&lt;li&gt;&lt;i&gt;handleEndTag(p)&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;handleEndTag(body)&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&lt;i&gt;handleEndTag(html)&lt;/i&gt;&lt;/li&gt;
&lt;/ol&gt;
The items in &lt;i&gt;italic&lt;/i&gt; are implied, that is, although they were not
explicitly specified, to be correct html they should have been present
(head isn't necessary, but it is still generated). For tags that
are implied, the AttributeSet argument will have a value of
&lt;code&gt;Boolean.TRUE&lt;/code&gt; for the key
&lt;code&gt;HTMLEditorKit.ParserCallback.IMPLIED&lt;/code&gt;.
&lt;p&gt;HTML.Attributes defines a type safe enumeration of html attributes.
If an attribute key of a tag is defined in HTML.Attribute, the
HTML.Attribute will be used as the key, otherwise a String will be used.
For example &lt;p foo=bar class=neat&gt; has two attributes. foo is
not defined in HTML.Attribute, where as class is, therefore the
AttributeSet will have two values in it, HTML.Attribute.CLASS with
a String value of 'neat' and the String key 'foo' with a String value of
'bar'.
&lt;p&gt;The position argument will indicate the start of the tag, comment
or text. Similiar to arrays, the first character in the stream has a
position of 0. For tags that are
implied the position will indicate
the location of the next encountered tag. In the first example,
the implied start body and html tags will have the same position as the
p tag, and the implied end p, html and body tags will all have the same
position.
&lt;p&gt;As html skips whitespace the position for text will be the position
of the first valid character, eg in the string '\n\n\nblah'
the text 'blah' will have a position of 3, the newlines are skipped.
&lt;p&gt;
For attributes that do not have a value, eg in the html
string &lt;code&gt;&lt;foo blah&gt;&lt;/code&gt; the attribute &lt;code&gt;blah&lt;/code&gt;
does not have a value, there are two possible values that will be
placed in the AttributeSet's value:
&lt;ul&gt;
&lt;li&gt;If the DTD does not contain an definition for the element, or the
definition does not have an explicit value then the value in the
AttributeSet will be &lt;code&gt;HTML.NULL_ATTRIBUTE_VALUE&lt;/code&gt;.
&lt;li&gt;If the DTD contains an explicit value, as in:
&lt;code&gt;&lt;!ATTLIST OPTION selected (selected) #IMPLIED&gt;&lt;/code&gt;
this value from the dtd (in this case selected) will be used.
&lt;/ul&gt;
&lt;p&gt;
Once the stream has been parsed, the callback is notified of the most
likely end of line string. The end of line string will be one of
\n, \r or \r\n, which ever is encountered the most in parsing the
stream.

@version 	1.28 12/19/03
@author      Sunita Mani
</documentation><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::javax::swing::text::html::parser::DocumentParser -&gt; JDK 5.0 Classes::javax::swing::text::html::parser::Parser]" refElementId="_10_5_622020d_1132928323782_362949_17722" refid="_10_5_622020d_1132928323782_362949_17722"/></generalization><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">DocumentParser</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="parser" refElementId="_9_5_f720368_1110473548284_548152_22833" refid="_9_5_f720368_1110473548284_548152_22833"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="A Parser for HTML Documents (actually, you can spe..." refElementId="_10_5_622020d_1132928317422_616896_11773" refid="_10_5_622020d_1132928317422_616896_11773"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::javax::swing::text::html::parser::DocumentParser -&gt; JDK 5.0 Classes::javax::swing::text::html::parser::Parser]" refElementId="_10_5_622020d_1132928323782_362949_17722" refid="_10_5_622020d_1132928323782_362949_17722"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="A Parser for HTML Documents (actually, you can spe..." refElementId="_10_5_622020d_1132928317422_616896_11773" refid="_10_5_622020d_1132928317422_616896_11773"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="parser" refElementId="_9_5_f720368_1110473548284_548152_22833" refid="_9_5_f720368_1110473548284_548152_22833"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="parser" refElementId="_9_5_f720368_1110473548284_548152_22833" refid="_9_5_f720368_1110473548284_548152_22833"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="parser" refElementId="_9_5_f720368_1110473548284_548152_22833" refid="_9_5_f720368_1110473548284_548152_22833"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::javax::swing::text::html::parser::DocumentParser</qualifiedName><superClass humanName="Super Class"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Parser" refElementId="_9_5_f720368_1110473546768_349080_10317" refid="_9_5_f720368_1110473546768_349080_10317"/></superClass><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>