<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928308710_181660_5453" refElementId="_10_5_622020d_1132928308710_181660_5453"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_795627831.jpg" name="CharsetProvider" refElementId="_9_5_f720368_1110473546659_531242_7939" refid="_9_5_f720368_1110473546659_531242_7939"/></annotatedElement><body humanName="Body" mode="s,e">Charset service-provider class.

&lt;p&gt; A charset provider is a concrete subclass of this class that has a
zero-argument constructor and some number of associated charset
implementation classes.  Charset providers may be installed in an instance
of the Java platform as extensions, that is, jar files placed into any of
the usual extension directories.  Providers may also be made available by
adding them to the applet or application class path or by some other
platform-specific means.  Charset providers are looked up via the current
thread's {@link java.lang.Thread#getContextClassLoader() &lt;/code&gt;context
class loader&lt;code&gt;}.

&lt;p&gt; A charset provider identifies itself with a provider-configuration file
named &lt;tt&gt;java.nio.charset.spi.CharsetProvider&lt;/tt&gt; in the resource
directory &lt;tt&gt;META-INF/services&lt;/tt&gt;.  The file should contain a list of
fully-qualified concrete charset-provider class names, one per line.  A line
is terminated by any one of a line feed (&lt;tt&gt;'\n'&lt;/tt&gt;), a carriage return
(&lt;tt&gt;'\r'&lt;/tt&gt;), or a carriage return followed immediately by a line feed.
Space and tab characters surrounding each name, as well as blank lines, are
ignored.  The comment character is &lt;tt&gt;'#'&lt;/tt&gt; (&lt;tt&gt;'&amp;#92;u0023'&lt;/tt&gt;); on
each line all characters following the first comment character are ignored.
The file must be encoded in UTF-8.

&lt;p&gt; If a particular concrete charset provider class is named in more than
one configuration file, or is named in the same configuration file more than
once, then the duplicates will be ignored.  The configuration file naming a
particular provider need not be in the same jar file or other distribution
unit as the provider itself.  The provider must be accessible from the same
class loader that was initially queried to locate the configuration file;
this is not necessarily the class loader that loaded the file. &lt;/p&gt;


@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.15, 04/05/05
@since 1.4

@see java.nio.charset.Charset
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_795627831.jpg" mode="s,e" name="CharsetProvider" refElementId="_9_5_f720368_1110473546659_531242_7939" refid="_9_5_f720368_1110473546659_531242_7939"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_795627831.jpg" name="CharsetProvider" refElementId="_9_5_f720368_1110473546659_531242_7939" refid="_9_5_f720368_1110473546659_531242_7939"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>