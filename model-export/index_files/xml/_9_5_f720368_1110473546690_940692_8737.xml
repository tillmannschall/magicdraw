<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" id="_9_5_f720368_1110473546690_940692_8737" refElementId="_9_5_f720368_1110473546690_940692_8737"><clientDependency humanName="Client Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::logging::LogRecord -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928322370_921519_14573" refid="_10_5_622020d_1132928322370_921519_14573"/></clientDependency><documentation humanName="Documentation" mode="s">LogRecord objects are used to pass logging requests between
the logging framework and individual log Handlers.
&lt;p&gt;
When a LogRecord is passed into the logging framework it
logically belongs to the framework and should no longer be
used or updated by the client application.
&lt;p&gt;
Note that if the client application has not specified an
explicit source method name and source class name, then the
LogRecord class will infer them automatically when they are
first accessed (due to a call on getSourceMethodName or
getSourceClassName) by analyzing the call stack.  Therefore,
if a logging Handler wants to pass off a LogRecord to another
thread, or to transmit it over RMI, and if it wishes to subsequently
obtain method name or class name information it should call
one of getSourceClassName or getSourceMethodName to force
the values to be filled in.
&lt;p&gt;
&lt;b&gt; Serialization notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The LogRecord class is serializable.

&lt;li&gt; Because objects in the parameters array may not be serializable,
during serialization all objects in the parameters array are
written as the corresponding Strings (using Object.toString).

&lt;li&gt; The ResourceBundle is not transmitted as part of the serialized
form, but the resource bundle name is, and the recipient object's
readObject method will attempt to locate a suitable resource bundle.

&lt;/ul&gt;

@version 1.23, 01/12/04
@since 1.4
</documentation><interfaceRealization humanName="Interface Realization"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::logging::LogRecord -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928322370_921519_14573" refid="_10_5_622020d_1132928322370_921519_14573"/></interfaceRealization><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">LogRecord</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="logging" refElementId="_9_5_f720368_1110473547799_233532_19062" refid="_9_5_f720368_1110473547799_233532_19062"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="LogRecord objects are used to pass logging request..." refElementId="_10_5_622020d_1132928310372_35248_6767" refid="_10_5_622020d_1132928310372_35248_6767"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="LogRecord objects are used to pass logging request..." refElementId="_10_5_622020d_1132928310372_35248_6767" refid="_10_5_622020d_1132928310372_35248_6767"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::logging::LogRecord -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928322370_921519_14573" refid="_10_5_622020d_1132928322370_921519_14573"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="logging" refElementId="_9_5_f720368_1110473547799_233532_19062" refid="_9_5_f720368_1110473547799_233532_19062"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="logging" refElementId="_9_5_f720368_1110473547799_233532_19062" refid="_9_5_f720368_1110473547799_233532_19062"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="logging" refElementId="_9_5_f720368_1110473547799_233532_19062" refid="_9_5_f720368_1110473547799_233532_19062"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::util::logging::LogRecord</qualifiedName><realizedInterfaces humanName="Realized Interface" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="Serializable" refElementId="_9_5_f720368_1110473546612_364919_7481" refid="_9_5_f720368_1110473546612_364919_7481"/></realizedInterfaces><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>