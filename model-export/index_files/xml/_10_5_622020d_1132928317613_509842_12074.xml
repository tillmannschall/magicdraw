<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928317613_509842_12074"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="GlyphPainter2" refid="_9_5_f720368_1110473546784_913090_10473"/></annotatedElement><body humanName="Body" mode="s,e">A class to perform rendering of the glyphs.
This can be implemented to be stateless, or
to hold some information as a cache to
facilitate faster rendering and model/view
translation.  At a minimum, the GlyphPainter
allows a View implementation to perform its
duties independent of a particular version
of JVM and selection of capabilities (i.e.
shaping for i18n, etc).
&lt;p&gt;
This implementation is intended for operation
under the JDK.  It uses the
java.awt.font.TextLayout class to do i18n capable
rendering.

@author  Timothy Prinzing
@version 1.21 06/28/04
@see GlyphView
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_1555793073.jpg" mode="s,e" name="GlyphPainter2" refid="_9_5_f720368_1110473546784_913090_10473"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="GlyphPainter2" refid="_9_5_f720368_1110473546784_913090_10473"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>