<?xml version="1.0" encoding="UTF-8"?><magicdraw><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" id="_9_5_f720368_1110473546737_441830_9725" refElementId="_9_5_f720368_1110473546737_441830_9725"><documentation humanName="Documentation" mode="s">&lt;code&gt;DataLine&lt;/code&gt; adds media-related functionality to its
superinterface, &lt;code&gt;{@link Line}&lt;/code&gt;.  This functionality includes
transport-control methods that start, stop, drain, and flush
the audio data that passes through the line.  A data line can also
report the current position, volume, and audio format of the media.
Data lines are used for output of audio by means of the
subinterfaces &lt;code&gt;{@link SourceDataLine}&lt;/code&gt; or
&lt;code&gt;{@link Clip}&lt;/code&gt;, which allow an application program to write data.  Similarly,
audio input is handled by the subinterface &lt;code&gt;{@link TargetDataLine}&lt;/code&gt;,
which allows data to be read.
&lt;p&gt;
A data line has an internal buffer in which
the incoming or outgoing audio data is queued.  The
&lt;code&gt;{@link #drain()}&lt;/code&gt; method blocks until this internal buffer
becomes empty, usually because all queued data has been processed.  The
&lt;code&gt;{@link #flush()}&lt;/code&gt; method discards any available queued data
from the internal buffer.
&lt;p&gt;
A data line produces &lt;code&gt;{@link LineEvent.Type#START START}&lt;/code&gt; and
&lt;code&gt;{@link LineEvent.Type#STOP STOP}&lt;/code&gt; events whenever
it begins or ceases active presentation or capture of data.  These events
can be generated in response to specific requests, or as a result of
less direct state changes.  For example, if &lt;code&gt;{@link #start()}&lt;/code&gt; is called
on an inactive data line, and data is available for capture or playback, a
&lt;code&gt;START&lt;/code&gt; event will be generated shortly, when data playback
or capture actually begins.  Or, if the flow of data to an active data
line is constricted so that a gap occurs in the presentation of data,
a &lt;code&gt;STOP&lt;/code&gt; event is generated.
&lt;p&gt;
Mixers often support synchronized control of multiple data lines.
Synchronization can be established through the Mixer interface's
&lt;code&gt;{@link Mixer#synchronize synchronize}&lt;/code&gt; method.
See the description of the &lt;code&gt;{@link Mixer Mixer}&lt;/code&gt; interface
for a more complete description.

@author Kara Kytle
@version 1.33, 04/07/14
@see LineEvent
@since 1.3
</documentation><general humanName="General"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="Line" refElementId="_9_5_f720368_1110473546737_269432_9731" refid="_9_5_f720368_1110473546737_269432_9731"/></general><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::javax::sound::sampled::DataLine -&gt; JDK 5.0 Classes::javax::sound::sampled::Line]" refElementId="_10_5_622020d_1132928323361_745679_16601" refid="_10_5_622020d_1132928323361_745679_16601"/></generalization><inheritedMember humanName="Inherited Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Info" refElementId="_9_5_f720368_1110473548096_228899_20885" refid="_9_5_f720368_1110473548096_228899_20885"/></inheritedMember><isAbstract humanName="Is Abstract">true</isAbstract><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><member humanName="Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Info" refElementId="_9_5_f720368_1110473548096_430262_20873" refid="_9_5_f720368_1110473548096_430262_20873"/><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Info" refElementId="_9_5_f720368_1110473548096_228899_20885" refid="_9_5_f720368_1110473548096_228899_20885"/></member><name humanName="Name" mode="s,e">DataLine</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="sampled" refElementId="_9_5_f720368_1110473548096_948655_20840" refid="_9_5_f720368_1110473548096_948655_20840"/><nestedClassifier humanName="Nested Classifier"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Info" refElementId="_9_5_f720368_1110473548096_430262_20873" refid="_9_5_f720368_1110473548096_430262_20873"/></nestedClassifier><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="&lt;code&gt;DataLine&lt;/code&gt; adds media-related functiona..." refElementId="_10_5_622020d_1132928316261_663303_10628" refid="_10_5_622020d_1132928316261_663303_10628"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::javax::sound::sampled::DataLine -&gt; JDK 5.0 Classes::javax::sound::sampled::Line]" refElementId="_10_5_622020d_1132928323361_745679_16601" refid="_10_5_622020d_1132928323361_745679_16601"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="&lt;code&gt;DataLine&lt;/code&gt; adds media-related functiona..." refElementId="_10_5_622020d_1132928316261_663303_10628" refid="_10_5_622020d_1132928316261_663303_10628"/><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Info" refElementId="_9_5_f720368_1110473548096_430262_20873" refid="_9_5_f720368_1110473548096_430262_20873"/></ownedElement><ownedMember humanName="Owned Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Info" refElementId="_9_5_f720368_1110473548096_430262_20873" refid="_9_5_f720368_1110473548096_430262_20873"/></ownedMember><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="sampled" refElementId="_9_5_f720368_1110473548096_948655_20840" refid="_9_5_f720368_1110473548096_948655_20840"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="sampled" refElementId="_9_5_f720368_1110473548096_948655_20840" refid="_9_5_f720368_1110473548096_948655_20840"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="sampled" refElementId="_9_5_f720368_1110473548096_948655_20840" refid="_9_5_f720368_1110473548096_948655_20840"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::javax::sound::sampled::DataLine</qualifiedName><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility">public</visibility></interface></magicdraw>