<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928309050_466864_5731"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="RemoteException" refid="_9_5_f720368_1110473546674_284651_8235"/></annotatedElement><body humanName="Body" mode="s,e">A &lt;code&gt;RemoteException&lt;/code&gt; is the common superclass for a number of
communication-related exceptions that may occur during the execution of a
remote method call.  Each method of a remote interface, an interface that
extends &lt;code&gt;java.rmi.Remote&lt;/code&gt;, must list
&lt;code&gt;RemoteException&lt;/code&gt; in its throws clause.

&lt;p&gt;As of release 1.4, this exception has been retrofitted to conform to
the general purpose exception-chaining mechanism.  The "wrapped remote
exception" that may be provided at construction time and accessed via
the public {@link #detail} field is now known as the &lt;i&gt;cause&lt;/i&gt;, and
may be accessed via the {@link Throwable#getCause()} method, as well as
the aforementioned "legacy field."

&lt;p&gt;Invoking the method {@link Throwable#initCause(Throwable)} on an
instance of &lt;code&gt;RemoteException&lt;/code&gt; always throws {@link
IllegalStateException}.

@version 1.24, 12/19/03
@author  Ann Wollrath
@since   JDK1.1
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_1555793073.jpg" mode="s,e" name="RemoteException" refid="_9_5_f720368_1110473546674_284651_8235"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="RemoteException" refid="_9_5_f720368_1110473546674_284651_8235"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>