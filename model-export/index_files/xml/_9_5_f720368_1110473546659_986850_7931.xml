<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_795627831.jpg" id="_9_5_f720368_1110473546659_986850_7931" refElementId="_9_5_f720368_1110473546659_986850_7931"><clientDependency humanName="Client Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::SocketChannel -&gt; JDK 5.0 Classes::java::nio::channels::ByteChannel]" refElementId="_10_5_622020d_1132928321749_117937_13881" refid="_10_5_622020d_1132928321749_117937_13881"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::SocketChannel -&gt; JDK 5.0 Classes::java::nio::channels::ScatteringByteChannel]" refElementId="_10_5_622020d_1132928321749_385457_13882" refid="_10_5_622020d_1132928321749_385457_13882"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::SocketChannel -&gt; JDK 5.0 Classes::java::nio::channels::GatheringByteChannel]" refElementId="_10_5_622020d_1132928321749_556106_13883" refid="_10_5_622020d_1132928321749_556106_13883"/></clientDependency><documentation humanName="Documentation" mode="s">A selectable channel for stream-oriented connecting sockets.

&lt;p&gt; Socket channels are not a complete abstraction of connecting network
sockets.  Binding, shutdown, and the manipulation of socket options must be
done through an associated {@link java.net.Socket} object obtained by
invoking the {@link #socket() socket} method.  It is not possible to create
a channel for an arbitrary, pre-existing socket, nor is it possible to
specify the {@link java.net.SocketImpl} object to be used by a socket
associated with a socket channel.

&lt;p&gt; A socket channel is created by invoking one of the {@link #open open}
methods of this class.  A newly-created socket channel is open but not yet
connected.  An attempt to invoke an I/O operation upon an unconnected
channel will cause a {@link NotYetConnectedException} to be thrown.  A
socket channel can be connected by invoking its {@link #connect connect}
method; once connected, a socket channel remains connected until it is
closed.  Whether or not a socket channel is connected may be determined by
invoking its {@link #isConnected isConnected} method.

&lt;p&gt; Socket channels support &lt;i&gt;non-blocking connection:&lt;/i&gt;&amp;nbsp;A socket
channel may be created and the process of establishing the link to the
remote socket may be initiated via the {@link #connect connect} method for
later completion by the {@link #finishConnect finishConnect} method.
Whether or not a connection operation is in progress may be determined by
invoking the {@link #isConnectionPending isConnectionPending} method.

&lt;p&gt; The input and output sides of a socket channel may independently be
&lt;i&gt;shut down&lt;/i&gt; without actually closing the channel.  Shutting down the
input side of a channel by invoking the {@link java.net.Socket#shutdownInput
shutdownInput} method of an associated socket object will cause further
reads on the channel to return &lt;tt&gt;-1&lt;/tt&gt;, the end-of-stream indication.
Shutting down the output side of the channel by invoking the {@link
java.net.Socket#shutdownOutput shutdownOutput} method of an associated
socket object will cause further writes on the channel to throw a {@link
ClosedChannelException}.

&lt;p&gt; Socket channels support &lt;i&gt;asynchronous shutdown,&lt;/i&gt; which is similar
to the asynchronous close operation specified in the {@link Channel} class.
If the input side of a socket is shut down by one thread while another
thread is blocked in a read operation on the socket's channel, then the read
operation in the blocked thread will complete without reading any bytes and
will return &lt;tt&gt;-1&lt;/tt&gt;.  If the output side of a socket is shut down by one
thread while another thread is blocked in a write operation on the socket's
channel, then the blocked thread will receive an {@link
AsynchronousCloseException}.

&lt;p&gt; Socket channels are safe for use by multiple concurrent threads.  They
support concurrent reading and writing, though at most one thread may be
reading and at most one thread may be writing at any given time.  The {@link
#connect connect} and {@link #finishConnect finishConnect} methods are
mutually synchronized against each other, and an attempt to initiate a read
or write operation while an invocation of one of these methods is in
progress will block until that invocation is complete.  &lt;/p&gt;


@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.33, 03/12/19
@since 1.4
</documentation><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::java::nio::channels::SocketChannel -&gt; JDK 5.0 Classes::java::nio::channels::spi::AbstractSelectableChannel]" refElementId="_10_5_622020d_1132928321749_582698_13884" refid="_10_5_622020d_1132928321749_582698_13884"/></generalization><inheritedMember humanName="Inherited Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="FooChannel" refElementId="_9_5_f720368_1110473547643_756721_18154" refid="_9_5_f720368_1110473547643_756721_18154"/></inheritedMember><interfaceRealization humanName="Interface Realization"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::SocketChannel -&gt; JDK 5.0 Classes::java::nio::channels::ByteChannel]" refElementId="_10_5_622020d_1132928321749_117937_13881" refid="_10_5_622020d_1132928321749_117937_13881"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::SocketChannel -&gt; JDK 5.0 Classes::java::nio::channels::ScatteringByteChannel]" refElementId="_10_5_622020d_1132928321749_385457_13882" refid="_10_5_622020d_1132928321749_385457_13882"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::SocketChannel -&gt; JDK 5.0 Classes::java::nio::channels::GatheringByteChannel]" refElementId="_10_5_622020d_1132928321749_556106_13883" refid="_10_5_622020d_1132928321749_556106_13883"/></interfaceRealization><isAbstract humanName="Is Abstract" mode="s,e">true</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><member humanName="Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="FooChannel" refElementId="_9_5_f720368_1110473547643_756721_18154" refid="_9_5_f720368_1110473547643_756721_18154"/></member><name humanName="Name" mode="s,e">SocketChannel</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="channels" refElementId="_9_5_f720368_1110473547643_957787_18151" refid="_9_5_f720368_1110473547643_957787_18151"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="A selectable channel for stream-oriented connectin..." refElementId="_10_5_622020d_1132928308690_810540_5445" refid="_10_5_622020d_1132928308690_810540_5445"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::java::nio::channels::SocketChannel -&gt; JDK 5.0 Classes::java::nio::channels::spi::AbstractSelectableChannel]" refElementId="_10_5_622020d_1132928321749_582698_13884" refid="_10_5_622020d_1132928321749_582698_13884"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="A selectable channel for stream-oriented connectin..." refElementId="_10_5_622020d_1132928308690_810540_5445" refid="_10_5_622020d_1132928308690_810540_5445"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::SocketChannel -&gt; JDK 5.0 Classes::java::nio::channels::ByteChannel]" refElementId="_10_5_622020d_1132928321749_117937_13881" refid="_10_5_622020d_1132928321749_117937_13881"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::SocketChannel -&gt; JDK 5.0 Classes::java::nio::channels::ScatteringByteChannel]" refElementId="_10_5_622020d_1132928321749_385457_13882" refid="_10_5_622020d_1132928321749_385457_13882"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::SocketChannel -&gt; JDK 5.0 Classes::java::nio::channels::GatheringByteChannel]" refElementId="_10_5_622020d_1132928321749_556106_13883" refid="_10_5_622020d_1132928321749_556106_13883"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="channels" refElementId="_9_5_f720368_1110473547643_957787_18151" refid="_9_5_f720368_1110473547643_957787_18151"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="channels" refElementId="_9_5_f720368_1110473547643_957787_18151" refid="_9_5_f720368_1110473547643_957787_18151"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="channels" refElementId="_9_5_f720368_1110473547643_957787_18151" refid="_9_5_f720368_1110473547643_957787_18151"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::nio::channels::SocketChannel</qualifiedName><realizedInterfaces humanName="Realized Interface" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="ByteChannel" refElementId="_9_5_f720368_1110473546643_237537_7873" refid="_9_5_f720368_1110473546643_237537_7873"/><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="ScatteringByteChannel" refElementId="_9_5_f720368_1110473546659_637739_7921" refid="_9_5_f720368_1110473546659_637739_7921"/><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="GatheringByteChannel" refElementId="_9_5_f720368_1110473546643_932884_7897" refid="_9_5_f720368_1110473546643_932884_7897"/></realizedInterfaces><superClass humanName="Super Class"><class classType="Class" humanType="Class" icon="index_files/icon_class_795627831.jpg" name="AbstractSelectableChannel" refElementId="_9_5_f720368_1110473546643_94013_7861" refid="_9_5_f720368_1110473546643_94013_7861"/></superClass><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>