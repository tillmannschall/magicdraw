<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928314779_426807_9165" refElementId="_10_5_622020d_1132928314779_426807_9165"><annotatedElement humanName="Annotated Element" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="IIOMetadataController" refElementId="_9_5_f720368_1110473546706_442242_9011" refid="_9_5_f720368_1110473546706_442242_9011"/></annotatedElement><body humanName="Body" mode="s,e">An interface to be implemented by objects that can determine the
settings of an &lt;code&gt;IIOMetadata&lt;/code&gt; object, either by putting
up a GUI to obtain values from a user, or by other means.  This
interface merely specifies a generic &lt;code&gt;activate&lt;/code&gt; method
that invokes the controller, without regard for how the controller
obtains values (&lt;i&gt;i.e.&lt;/i&gt;, whether the controller puts up a GUI
or merely computes a set of values is irrelevant to this
interface).

&lt;p&gt; Within the &lt;code&gt;activate&lt;/code&gt; method, a controller obtains
initial values by querying the &lt;code&gt;IIOMetadata&lt;/code&gt; object's
settings, either using the XML DOM tree or a plug-in specific
interface, modifies values by whatever means, then modifies the
&lt;code&gt;IIOMetadata&lt;/code&gt; object's settings, using either the
&lt;code&gt;setFromTree&lt;/code&gt; or &lt;code&gt;mergeTree&lt;/code&gt; methods, or a
plug-in specific interface.  In general, applications may expect
that when the &lt;code&gt;activate&lt;/code&gt; method returns
&lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;IIOMetadata&lt;/code&gt; object is ready for
use in a write operation.

&lt;p&gt; Vendors may choose to provide GUIs for the
&lt;code&gt;IIOMetadata&lt;/code&gt; subclasses they define for a particular
plug-in.  These can be set up as default controllers in the
corresponding &lt;code&gt;IIOMetadata&lt;/code&gt; subclasses.

&lt;p&gt; Alternatively, an algorithmic process such as a database lookup
or the parsing of a command line could be used as a controller, in
which case the &lt;code&gt;activate&lt;/code&gt; method would simply look up or
compute the settings, call methods on &lt;code&gt;IIOMetadata&lt;/code&gt; to
set its state, and return &lt;code&gt;true&lt;/code&gt;.

@see IIOMetadata#setController
@see IIOMetadata#getController
@see IIOMetadata#getDefaultController
@see IIOMetadata#hasController
@see IIOMetadata#activateController

@version 0.5
</body><documentation humanName="Documentation"/><owner classType="Interface" humanName="Owner" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" mode="s,e" name="IIOMetadataController" refElementId="_9_5_f720368_1110473546706_442242_9011" refid="_9_5_f720368_1110473546706_442242_9011"/><owningElement classType="Interface" humanName="Owning Element" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="IIOMetadataController" refElementId="_9_5_f720368_1110473546706_442242_9011" refid="_9_5_f720368_1110473546706_442242_9011"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>