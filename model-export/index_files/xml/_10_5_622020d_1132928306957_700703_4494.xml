<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928306957_700703_4494"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="PropertyChangeEvent" refid="_9_5_f720368_1110473546596_574313_7311"/></annotatedElement><body humanName="Body" mode="s,e">A "PropertyChange" event gets delivered whenever a bean changes a "bound"
or "constrained" property.  A PropertyChangeEvent object is sent as an
argument to the PropertyChangeListener and VetoableChangeListener methods.
&lt;P&gt;
Normally PropertyChangeEvents are accompanied by the name and the old
and new value of the changed property.  If the new value is a primitive
type (such as int or boolean) it must be wrapped as the
corresponding java.lang.* Object type (such as Integer or Boolean).
&lt;P&gt;
Null values may be provided for the old and the new values if their
true values are not known.
&lt;P&gt;
An event source may send a null object as the name to indicate that an
arbitrary set of if its properties have changed.  In this case the
old and new values should also be null.
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_1555793073.jpg" mode="s,e" name="PropertyChangeEvent" refid="_9_5_f720368_1110473546596_574313_7311"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="PropertyChangeEvent" refid="_9_5_f720368_1110473546596_574313_7311"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>