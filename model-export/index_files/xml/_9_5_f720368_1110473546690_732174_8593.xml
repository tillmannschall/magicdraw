<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" id="_9_5_f720368_1110473546690_732174_8593" refElementId="_9_5_f720368_1110473546690_732174_8593"><documentation humanName="Documentation" mode="s">The permission for which the &lt;code&gt;SecurityManager&lt;/code&gt; will check
when code that is running in an applet calls the
&lt;code&gt;DriverManager.setLogWriter&lt;/code&gt; method or the
&lt;code&gt;DriverManager.setLogStream&lt;/code&gt; (deprecated) method.
If there is no &lt;code&gt;SQLPermission&lt;/code&gt; object, these methods
throw a &lt;code&gt;java.lang.SecurityException&lt;/code&gt; as a runtime exception.
&lt;P&gt;
A &lt;code&gt;SQLPermission&lt;/code&gt; object contains
a name (also referred to as a "target name") but no actions
list; there is either a named permission or there is not.
The target name is the name of the permission (see below). The
naming convention follows the  hierarchical property naming convention.
In addition, an asterisk
may appear at the end of the name, following a ".", or by itself, to
signify a wildcard match. For example: &lt;code&gt;loadLibrary.*&lt;/code&gt;
or &lt;code&gt;*&lt;/code&gt; is valid,
but &lt;code&gt;*loadLibrary&lt;/code&gt; or &lt;code&gt;a*b&lt;/code&gt; is not valid.
&lt;P&gt;
The following table lists all the possible &lt;code&gt;SQLPermission&lt;/code&gt; target names.
Currently, the only name allowed is &lt;code&gt;setLog&lt;/code&gt;.
The table gives a description of what the permission allows
and a discussion of the risks of granting code the permission.
&lt;P&gt;

&lt;table border=1 cellpadding=5 summary="permission target name, what the permission allows, and associated risks"&gt;
&lt;tr&gt;
&lt;th&gt;Permission Target Name&lt;/th&gt;
&lt;th&gt;What the Permission Allows&lt;/th&gt;
&lt;th&gt;Risks of Allowing this Permission&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;setLog&lt;/td&gt;
&lt;td&gt;Setting of the logging stream&lt;/td&gt;
&lt;td&gt;This is a dangerous permission to grant.
The contents of the log may contain usernames and passwords,
SQL statements, and SQL data.&lt;/td&gt;
&lt;/tr&gt;

&lt;/table&gt;

The person running an applet decides what permissions to allow
and will run the &lt;code&gt;Policy Tool&lt;/code&gt; to create an
&lt;code&gt;SQLPermission&lt;/code&gt; in a policy file.  A programmer does
not use a constructor directly to create an instance of &lt;code&gt;SQLPermission&lt;/code&gt;
but rather uses a tool.
@since 1.3
@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager

</documentation><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::java::sql::SQLPermission -&gt; JDK 5.0 Classes::java::security::BasicPermission]" refElementId="_10_5_622020d_1132928321919_616134_14258" refid="_10_5_622020d_1132928321919_616134_14258"/></generalization><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">true</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">true</isLeaf><name humanName="Name" mode="s,e">SQLPermission</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="sql" refElementId="_9_5_f720368_1110473547753_914338_18866" refid="_9_5_f720368_1110473547753_914338_18866"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="The permission for which the &lt;code&gt;SecurityManager..." refElementId="_10_5_622020d_1132928309541_736510_6194" refid="_10_5_622020d_1132928309541_736510_6194"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::java::sql::SQLPermission -&gt; JDK 5.0 Classes::java::security::BasicPermission]" refElementId="_10_5_622020d_1132928321919_616134_14258" refid="_10_5_622020d_1132928321919_616134_14258"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="The permission for which the &lt;code&gt;SecurityManager..." refElementId="_10_5_622020d_1132928309541_736510_6194" refid="_10_5_622020d_1132928309541_736510_6194"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="sql" refElementId="_9_5_f720368_1110473547753_914338_18866" refid="_9_5_f720368_1110473547753_914338_18866"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="sql" refElementId="_9_5_f720368_1110473547753_914338_18866" refid="_9_5_f720368_1110473547753_914338_18866"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="sql" refElementId="_9_5_f720368_1110473547753_914338_18866" refid="_9_5_f720368_1110473547753_914338_18866"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::sql::SQLPermission</qualifiedName><superClass humanName="Super Class"><class classType="Class" humanType="Class" icon="index_files/icon_class_795627831.jpg" name="BasicPermission" refElementId="_9_5_f720368_1110473546674_30641_8429" refid="_9_5_f720368_1110473546674_30641_8429"/></superClass><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>