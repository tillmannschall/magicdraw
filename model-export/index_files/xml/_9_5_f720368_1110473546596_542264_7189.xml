<?xml version="1.0" encoding="UTF-8"?><magicdraw><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" id="_9_5_f720368_1110473546596_542264_7189"><documentation humanName="Documentation" mode="standard">A bean implementor who wishes to provide explicit information about
their bean may provide a BeanInfo class that implements this BeanInfo
interface and provides explicit information about the methods,
properties, events, etc, of their  bean.
&lt;p&gt;
A bean implementor doesn't need to provide a complete set of
explicit information.  You can pick and choose which information
you want to provide and the rest will be obtained by automatic
analysis using low-level reflection of the bean classes' methods
and applying standard design patterns.
&lt;p&gt;
You get the opportunity to provide lots and lots of different
information as part of the various XyZDescriptor classes.  But
don't panic, you only really need to provide the minimal core
information required by the various constructors.
&lt;P&gt;
See also the SimpleBeanInfo class which provides a convenient
"noop" base class for BeanInfo classes, which you can override
for those specific places where you want to return explicit info.
&lt;P&gt;
To learn about all the behaviour of a bean see the Introspector class.
</documentation><isAbstract humanName="Is Abstract">true</isAbstract><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">BeanInfo</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="beans" refid="_9_5_f720368_1110473547440_999992_17398"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928306807_46908_4408"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928306807_46908_4408"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_2000410491.jpg" mode="s,e" name="beans" refid="_9_5_f720368_1110473547440_999992_17398"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="beans" refid="_9_5_f720368_1110473547440_999992_17398"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="beans" refid="_9_5_f720368_1110473547440_999992_17398"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::beans::BeanInfo</qualifiedName><supplierDependency humanName="Supplier Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::beans::SimpleBeanInfo -&gt; JDK 5.0 Classes::java::beans::BeanInfo]" refid="_10_5_622020d_1132928321548_875022_13466"/></supplierDependency><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility">public</visibility></interface></magicdraw>