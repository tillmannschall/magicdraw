<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_303957224.jpg" id="_9_5_f720368_1110473546737_447059_9481"><clientDependency humanName="Client Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::javax::print::attribute::SetOfIntegerSyntax -&gt; JDK 5.0 Classes::java::io::Serializable]" refid="_10_5_622020d_1132928323331_332697_16470"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::javax::print::attribute::SetOfIntegerSyntax -&gt; JDK 5.0 Classes::java::lang::Cloneable]" refid="_10_5_622020d_1132928323331_315431_16471"/></clientDependency><documentation humanName="Documentation" mode="standard">Class SetOfIntegerSyntax is an abstract base class providing the common
implementation of all attributes whose value is a set of nonnegative
integers. This includes attributes whose value is a single range of integers
and attributes whose value is a set of ranges of integers.
&lt;P&gt;
You can construct an instance of SetOfIntegerSyntax by giving it in "string
form." The string consists of zero or more comma-separated integer groups.
Each integer group consists of either one integer, two integers separated by
a hyphen (&lt;CODE&gt;-&lt;/CODE&gt;), or two integers separated by a colon
(&lt;CODE&gt;:&lt;/CODE&gt;). Each integer consists of one or more decimal digits
(&lt;CODE&gt;0&lt;/CODE&gt; through &lt;CODE&gt;9&lt;/CODE&gt;). Whitespace characters cannot
appear within an integer but are otherwise ignored. For example:
&lt;CODE&gt;""&lt;/CODE&gt;, &lt;CODE&gt;"1"&lt;/CODE&gt;, &lt;CODE&gt;"5-10"&lt;/CODE&gt;, &lt;CODE&gt;"1:2,
4"&lt;/CODE&gt;.
&lt;P&gt;
You can also construct an instance of SetOfIntegerSyntax by giving it in
"array form." Array form consists of an array of zero or more integer groups
where each integer group is a length-1 or length-2 array of
&lt;CODE&gt;int&lt;/CODE&gt;s; for example, &lt;CODE&gt;int[0][]&lt;/CODE&gt;,
&lt;CODE&gt;int[][]{{1}}&lt;/CODE&gt;, &lt;CODE&gt;int[][]{{5,10}}&lt;/CODE&gt;,
&lt;CODE&gt;int[][]{{1,2},{4}}&lt;/CODE&gt;.
&lt;P&gt;
In both string form and array form, each successive integer group gives a
range of integers to be included in the set. The first integer in each group
gives the lower bound of the range; the second integer in each group gives
the upper bound of the range; if there is only one integer in the group, the
upper bound is the same as the lower bound. If the upper bound is less than
the lower bound, it denotes a null range (no values). If the upper bound is
equal to the lower bound, it denotes a range consisting of a single value. If
the upper bound is greater than the lower bound, it denotes a range
consisting of more than one value. The ranges may appear in any order and are
allowed to overlap. The union of all the ranges gives the set's contents.
Once a SetOfIntegerSyntax instance is constructed, its value is immutable.
&lt;P&gt;
The SetOfIntegerSyntax object's value is actually stored in "&lt;I&gt;canonical&lt;/I&gt;
array form." This is the same as array form, except there are no null ranges;
the members of the set are represented in as few ranges as possible (i.e.,
overlapping ranges are coalesced); the ranges appear in ascending order; and
each range is always represented as a length-two array of &lt;CODE&gt;int&lt;/CODE&gt;s
in the form {lower bound, upper bound}. An empty set is represented as a
zero-length array.
&lt;P&gt;
Class SetOfIntegerSyntax has operations to return the set's members in
canonical array form, to test whether a given integer is a member of the
set, and to iterate through the members of the set.
&lt;P&gt;

@author  David Mendenhall
@author  Alan Kaminsky
</documentation><interfaceRealization humanName="Interface Realization"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::javax::print::attribute::SetOfIntegerSyntax -&gt; JDK 5.0 Classes::java::io::Serializable]" refid="_10_5_622020d_1132928323331_332697_16470"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::javax::print::attribute::SetOfIntegerSyntax -&gt; JDK 5.0 Classes::java::lang::Cloneable]" refid="_10_5_622020d_1132928323331_315431_16471"/></interfaceRealization><isAbstract humanName="Is Abstract" mode="s,e">true</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">SetOfIntegerSyntax</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="attribute" refid="_9_5_f720368_1110473547987_11292_20190"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928315820_282713_10299"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928315820_282713_10299"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::javax::print::attribute::SetOfIntegerSyntax -&gt; JDK 5.0 Classes::java::io::Serializable]" refid="_10_5_622020d_1132928323331_332697_16470"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::javax::print::attribute::SetOfIntegerSyntax -&gt; JDK 5.0 Classes::java::lang::Cloneable]" refid="_10_5_622020d_1132928323331_315431_16471"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_2000410491.jpg" mode="s,e" name="attribute" refid="_9_5_f720368_1110473547987_11292_20190"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="attribute" refid="_9_5_f720368_1110473547987_11292_20190"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="attribute" refid="_9_5_f720368_1110473547987_11292_20190"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::javax::print::attribute::SetOfIntegerSyntax</qualifiedName><realizedInterfaces humanName="Realized Interface" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="Cloneable" refid="_9_5_f720368_1110473546612_888397_7587"/><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="Serializable" refid="_9_5_f720368_1110473546612_364919_7481"/></realizedInterfaces><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>