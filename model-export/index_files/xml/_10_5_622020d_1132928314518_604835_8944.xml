<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928314518_604835_8944" refElementId="_10_5_622020d_1132928314518_604835_8944"><annotatedElement humanName="Annotated Element" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="Attr" refElementId="_9_5_f720368_1110473546940_741813_13216" refid="_9_5_f720368_1110473546940_741813_13216"/></annotatedElement><body humanName="Body" mode="s,e">The &lt;code&gt;Attr&lt;/code&gt; interface represents an attribute in an
&lt;code&gt;Element&lt;/code&gt; object. Typically the allowable values for the
attribute are defined in a schema associated with the document.
&lt;p&gt;&lt;code&gt;Attr&lt;/code&gt; objects inherit the &lt;code&gt;Node&lt;/code&gt; interface, but
since they are not actually child nodes of the element they describe, the
DOM does not consider them part of the document tree. Thus, the
&lt;code&gt;Node&lt;/code&gt; attributes &lt;code&gt;parentNode&lt;/code&gt;,
&lt;code&gt;previousSibling&lt;/code&gt;, and &lt;code&gt;nextSibling&lt;/code&gt; have a
&lt;code&gt;null&lt;/code&gt; value for &lt;code&gt;Attr&lt;/code&gt; objects. The DOM takes the
view that attributes are properties of elements rather than having a
separate identity from the elements they are associated with; this should
make it more efficient to implement such features as default attributes
associated with all elements of a given type. Furthermore,
&lt;code&gt;Attr&lt;/code&gt; nodes may not be immediate children of a
&lt;code&gt;DocumentFragment&lt;/code&gt;. However, they can be associated with
&lt;code&gt;Element&lt;/code&gt; nodes contained within a
&lt;code&gt;DocumentFragment&lt;/code&gt;. In short, users and implementors of the
DOM need to be aware that &lt;code&gt;Attr&lt;/code&gt; nodes have some things in
common with other objects inheriting the &lt;code&gt;Node&lt;/code&gt; interface, but
they also are quite distinct.
&lt;p&gt;The attribute's effective value is determined as follows: if this
attribute has been explicitly assigned any value, that value is the
attribute's effective value; otherwise, if there is a declaration for
this attribute, and that declaration includes a default value, then that
default value is the attribute's effective value; otherwise, the
attribute does not exist on this element in the structure model until it
has been explicitly added. Note that the &lt;code&gt;Node.nodeValue&lt;/code&gt;
attribute on the &lt;code&gt;Attr&lt;/code&gt; instance can also be used to retrieve
the string version of the attribute's value(s).
&lt;p&gt; If the attribute was not explicitly given a value in the instance
document but has a default value provided by the schema associated with
the document, an attribute node will be created with
&lt;code&gt;specified&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;. Removing attribute
nodes for which a default value is defined in the schema generates a new
attribute node with the default value and &lt;code&gt;specified&lt;/code&gt; set to
&lt;code&gt;false&lt;/code&gt;. If validation occurred while invoking
&lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, attribute nodes with
&lt;code&gt;specified&lt;/code&gt; equals to &lt;code&gt;false&lt;/code&gt; are recomputed
according to the default attribute values provided by the schema. If no
default value is associate with this attribute in the schema, the
attribute node is discarded.
&lt;p&gt;In XML, where the value of an attribute can contain entity references,
the child nodes of the &lt;code&gt;Attr&lt;/code&gt; node may be either
&lt;code&gt;Text&lt;/code&gt; or &lt;code&gt;EntityReference&lt;/code&gt; nodes (when these are
in use; see the description of &lt;code&gt;EntityReference&lt;/code&gt; for
discussion).
&lt;p&gt;The DOM Core represents all attribute values as simple strings, even if
the DTD or schema associated with the document declares them of some
specific type such as tokenized.
&lt;p&gt;The way attribute value normalization is performed by the DOM
implementation depends on how much the implementation knows about the
schema in use. Typically, the &lt;code&gt;value&lt;/code&gt; and
&lt;code&gt;nodeValue&lt;/code&gt; attributes of an &lt;code&gt;Attr&lt;/code&gt; node initially
returns the normalized value given by the parser. It is also the case
after &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; is called (assuming the
right options have been set). But this may not be the case after
mutation, independently of whether the mutation is performed by setting
the string value directly or by changing the &lt;code&gt;Attr&lt;/code&gt; child
nodes. In particular, this is true when &lt;a href='http://www.w3.org/TR/2004/REC-xml-20040204#dt-charref'&gt;character
references&lt;/a&gt; are involved, given that they are not represented in the DOM and they
impact attribute value normalization. On the other hand, if the
implementation knows about the schema in use when the attribute value is
changed, and it is of a different type than CDATA, it may normalize it
again at that time. This is especially true of specialized DOM
implementations, such as SVG DOM implementations, which store attribute
values in an internal form different from a string.
&lt;p&gt;The following table gives some examples of the relations between the
attribute value in the original document (parsed attribute), the value as
exposed in the DOM, and the serialization of the value:
&lt;table border='1' cellpadding='3'&gt;
&lt;tr&gt;
&lt;th&gt;Examples&lt;/th&gt;
&lt;th&gt;Parsed
attribute value&lt;/th&gt;
&lt;th&gt;Initial &lt;code&gt;Attr.value&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;Serialized attribute value&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
Character reference&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;"x&amp;#178;=5"&lt;/pre&gt;
&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;"x\u00b2=5"&lt;/pre&gt;
&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;"x&amp;#178;=5"&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;Built-in
character entity&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;"y&lt;6"&lt;/pre&gt;
&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;"y&lt;6"&lt;/pre&gt;
&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;"y&lt;6"&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;Literal newline between&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;
"x=5&amp;#10;y=6"&lt;/pre&gt;
&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;"x=5 y=6"&lt;/pre&gt;
&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;"x=5&amp;#10;y=6"&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;Normalized newline between&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;"x=5
y=6"&lt;/pre&gt;
&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;"x=5 y=6"&lt;/pre&gt;
&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;"x=5 y=6"&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;Entity &lt;code&gt;e&lt;/code&gt; with literal newline&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;
&lt;pre&gt;
&lt;!ENTITY e '...&amp;#10;...'&gt; [...]&gt; "x=5&amp;e;y=6"&lt;/pre&gt;
&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;&lt;em&gt;Dependent on Implementation and Load Options&lt;/em&gt;&lt;/td&gt;
&lt;td valign='top' rowspan='1' colspan='1'&gt;&lt;em&gt;Dependent on Implementation and Load/Save Options&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;See also the &lt;a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'&gt;Document Object Model (DOM) Level 3 Core Specification&lt;/a&gt;.
</body><documentation humanName="Documentation"/><owner classType="Interface" humanName="Owner" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" mode="s,e" name="Attr" refElementId="_9_5_f720368_1110473546940_741813_13216" refid="_9_5_f720368_1110473546940_741813_13216"/><owningElement classType="Interface" humanName="Owning Element" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="Attr" refElementId="_9_5_f720368_1110473546940_741813_13216" refid="_9_5_f720368_1110473546940_741813_13216"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>