<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928315820_683065_10297"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="ResolutionSyntax" refid="_9_5_f720368_1110473546737_642630_9479"/></annotatedElement><body humanName="Body" mode="s,e">Class ResolutionSyntax is an abstract base class providing the common
implementation of all attributes denoting a printer resolution.
&lt;P&gt;
A resolution attribute's value consists of two items, the cross feed
direction resolution and the feed direction resolution. A resolution
attribute may be constructed by supplying the two values and indicating the
units in which the values are measured. Methods are provided to return a
resolution attribute's values, indicating the units in which the values are
to be returned. The two most common resolution units are dots per inch (dpi)
and dots per centimeter (dpcm), and exported constants {@link #DPI
&lt;CODE&gt;DPI&lt;/CODE&gt;} and {@link #DPCM &lt;CODE&gt;DPCM&lt;/CODE&gt;} are provided for
indicating those units.
&lt;P&gt;
Once constructed, a resolution attribute's value is immutable.
&lt;P&gt;
&lt;B&gt;Design&lt;/B&gt;
&lt;P&gt;
A resolution attribute's cross feed direction resolution and feed direction
resolution values are stored internally using units of dots per 100 inches
(dphi). Storing the values in dphi rather than, say, metric units allows
precise integer arithmetic conversions between dpi and dphi and between dpcm
and dphi: 1 dpi = 100 dphi, 1 dpcm = 254 dphi. Thus, the values can be stored
into and retrieved back from a resolution attribute in either units with no
loss of precision. This would not be guaranteed if a floating point
representation were used. However, roundoff error will in general occur if a
resolution attribute's values are created in one units and retrieved in
different units; for example, 600 dpi will be rounded to 236 dpcm, whereas
the true value (to five figures) is 236.22 dpcm.
&lt;P&gt;
Storing the values internally in common units of dphi lets two resolution
attributes be compared without regard to the units in which they were
created; for example, 300 dpcm will compare equal to 762 dpi, as they both
are stored as 76200 dphi. In particular, a lookup service can
match resolution attributes based on equality of their serialized
representations regardless of the units in which they were created. Again,
using integers for internal storage allows precise equality comparisons to be
done, which would not be guaranteed if a floating point representation were
used.
&lt;P&gt;
The exported constant {@link #DPI &lt;CODE&gt;DPI&lt;/CODE&gt;} is actually the
conversion factor by which to multiply a value in dpi to get the value in
dphi. Likewise, the exported constant {@link #DPCM &lt;CODE&gt;DPCM&lt;/CODE&gt;} is the
conversion factor by which to multiply a value in dpcm to get the value in
dphi. A client can specify a resolution value in units other than dpi or dpcm
by supplying its own conversion factor. However, since the internal units of
dphi was chosen with supporting only the external units of dpi and dpcm in
mind, there is no guarantee that the conversion factor for the client's units
will be an exact integer. If the conversion factor isn't an exact integer,
resolution values in the client's units won't be stored precisely.
&lt;P&gt;

@author  David Mendenhall
@author  Alan Kaminsky
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_303957224.jpg" mode="s,e" name="ResolutionSyntax" refid="_9_5_f720368_1110473546737_642630_9479"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="ResolutionSyntax" refid="_9_5_f720368_1110473546737_642630_9479"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>