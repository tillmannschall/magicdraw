<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" id="_9_5_f720368_1110473546581_251351_6815" refElementId="_9_5_f720368_1110473546581_251351_6815"><clientDependency humanName="Client Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::image::PixelGrabber -&gt; JDK 5.0 Classes::java::awt::image::ImageConsumer]" refElementId="_10_5_622020d_1132928321248_966838_13089" refid="_10_5_622020d_1132928321248_966838_13089"/></clientDependency><documentation humanName="Documentation" mode="s">The PixelGrabber class implements an ImageConsumer which can be attached
to an Image or ImageProducer object to retrieve a subset of the pixels
in that image.  Here is an example:
&lt;pre&gt;

public void handlesinglepixel(int x, int y, int pixel) {
int alpha = (pixel &gt;&gt; 24) &amp; 0xff;
int red   = (pixel &gt;&gt; 16) &amp; 0xff;
int green = (pixel &gt;&gt;  8) &amp; 0xff;
int blue  = (pixel      ) &amp; 0xff;
Deal with the pixel as necessary...
}

public void handlepixels(Image img, int x, int y, int w, int h) {
int[] pixels = new int[w * h];
PixelGrabber pg = new PixelGrabber(img, x, y, w, h, pixels, 0, w);
try {
pg.grabPixels();
} catch (InterruptedException e) {
System.err.println("interrupted waiting for pixels!");
return;
}
if ((pg.getStatus() &amp; ImageObserver.ABORT) != 0) {
System.err.println("image fetch aborted or errored");
return;
}
for (int j = 0; j &lt; h; j++) {
for (int i = 0; i &lt; w; i++) {
handlesinglepixel(x+i, y+j, pixels[j * w + i]);
}
}
}

&lt;/pre&gt;

@see ColorModel#getRGBdefault

@version 	1.25, 07/16/04
@author 	Jim Graham
</documentation><interfaceRealization humanName="Interface Realization"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::image::PixelGrabber -&gt; JDK 5.0 Classes::java::awt::image::ImageConsumer]" refElementId="_10_5_622020d_1132928321248_966838_13089" refid="_10_5_622020d_1132928321248_966838_13089"/></interfaceRealization><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">PixelGrabber</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="image" refElementId="_9_5_f720368_1110473547331_114238_16707" refid="_9_5_f720368_1110473547331_114238_16707"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="The PixelGrabber class implements an ImageConsumer..." refElementId="_10_5_622020d_1132928306096_579776_3980" refid="_10_5_622020d_1132928306096_579776_3980"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="The PixelGrabber class implements an ImageConsumer..." refElementId="_10_5_622020d_1132928306096_579776_3980" refid="_10_5_622020d_1132928306096_579776_3980"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::image::PixelGrabber -&gt; JDK 5.0 Classes::java::awt::image::ImageConsumer]" refElementId="_10_5_622020d_1132928321248_966838_13089" refid="_10_5_622020d_1132928321248_966838_13089"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="image" refElementId="_9_5_f720368_1110473547331_114238_16707" refid="_9_5_f720368_1110473547331_114238_16707"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="image" refElementId="_9_5_f720368_1110473547331_114238_16707" refid="_9_5_f720368_1110473547331_114238_16707"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="image" refElementId="_9_5_f720368_1110473547331_114238_16707" refid="_9_5_f720368_1110473547331_114238_16707"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::awt::image::PixelGrabber</qualifiedName><realizedInterfaces humanName="Realized Interface" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="ImageConsumer" refElementId="_9_5_f720368_1110473546565_635250_6791" refid="_9_5_f720368_1110473546565_635250_6791"/></realizedInterfaces><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>