<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" id="_10_5_622020d_1132928307668_99808_4820"><documentation humanName="Documentation" mode="standard">A &lt;tt&gt;MemoryUsage&lt;/tt&gt; object represents a snapshot of memory usage.
Instances of the &lt;tt&gt;MemoryUsage&lt;/tt&gt; class are usually constructed
by methods that are used to obtain memory usage
information about individual memory pool of the Java virtual machine or
the heap or non-heap memory of the Java virtual machine as a whole.

&lt;p&gt; A &lt;tt&gt;MemoryUsage&lt;/tt&gt; object contains four values:
&lt;ul&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td valign=top&gt; &lt;tt&gt;init&lt;/tt&gt; &lt;/td&gt;
&lt;td valign=top&gt; represents the initial amount of memory (in bytes) that
the Java virtual machine requests from the operating system
for memory management during startup.  The Java virtual machine
may request additional memory from the operating system and
may also release memory to the system over time.
The value of &lt;tt&gt;init&lt;/tt&gt; may be undefined.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign=top&gt; &lt;tt&gt;used&lt;/tt&gt; &lt;/td&gt;
&lt;td valign=top&gt; represents the amount of memory currently used (in bytes).
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign=top&gt; &lt;tt&gt;committed&lt;/tt&gt; &lt;/td&gt;
&lt;td valign=top&gt; represents the amount of memory (in bytes) that is
guaranteed to be available for use by the Java virtual machine.
The amount of committed memory may change over time (increase
or decrease).  The Java virtual machine may release memory to
the system and &lt;tt&gt;committed&lt;/tt&gt; could be less than &lt;tt&gt;init&lt;/tt&gt;.
&lt;tt&gt;committed&lt;/tt&gt; will always be greater than
or equal to &lt;tt&gt;used&lt;/tt&gt;.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign=top&gt; &lt;tt&gt;max&lt;/tt&gt; &lt;/td&gt;
&lt;td valign=top&gt; represents the maximum amount of memory (in bytes)
that can be used for memory management. Its value may be undefined.
The maximum amount of memory may change over time if defined.
The amount of used and committed memory will always be less than
or equal to &lt;tt&gt;max&lt;/tt&gt; if &lt;tt&gt;max&lt;/tt&gt; is defined.
A memory allocation may fail if it attempts to increase the
used memory such that &lt;tt&gt;used &amp;gt committed&lt;/tt&gt; even
if &lt;tt&gt;used &amp;lt= max&lt;/tt&gt; would still be true (for example,
when the system is low on virtual memory).
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/ul&gt;

Below is a picture showing an example of a memory pool:
&lt;p&gt;
&lt;pre&gt;
+----------------------------------------------+
+////////////////           |                  +
+////////////////           |                  +
+----------------------------------------------+

|--------|
init
|---------------|
used
|---------------------------|
committed
|----------------------------------------------|
max
&lt;/pre&gt;

&lt;h4&gt;MXBean Mapping&lt;/h4&gt;
&lt;tt&gt;MemoryUsage&lt;/tt&gt; is mapped to a {@link CompositeData CompositeData}
with attributes as specified in the {@link #from from} method.

@author   Mandy Chung
@version 1.16, 05/25/04
@since   1.5
</documentation><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">MemoryUsage</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="management" refid="_10_5_622020d_1132928307518_833692_4788"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928307678_907374_4822"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928307678_907374_4822"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_2000410491.jpg" mode="s,e" name="management" refid="_10_5_622020d_1132928307518_833692_4788"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="management" refid="_10_5_622020d_1132928307518_833692_4788"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="management" refid="_10_5_622020d_1132928307518_833692_4788"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::lang::management::MemoryUsage</qualifiedName><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>