<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928308770_137711_5465" refElementId="_10_5_622020d_1132928308770_137711_5465"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="CoderResult" refElementId="_9_5_f720368_1110473546659_66837_7951" refid="_9_5_f720368_1110473546659_66837_7951"/></annotatedElement><body humanName="Body" mode="s,e">A description of the result state of a coder.

&lt;p&gt; A charset coder, that is, either a decoder or an encoder, consumes bytes
(or characters) from an input buffer, translates them, and writes the
resulting characters (or bytes) to an output buffer.  A coding process
terminates for one of four categories of reasons, which are described by
instances of this class:

&lt;ul&gt;

&lt;li&gt;&lt;p&gt; &lt;i&gt;Underflow&lt;/i&gt; is reported when there is no more input to be
processed, or there is insufficient input and additional input is
required.  This condition is represented by the unique result object
{@link #UNDERFLOW}, whose {@link #isUnderflow() isUnderflow} method
returns &lt;tt&gt;true&lt;/tt&gt;.  &lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt; &lt;i&gt;Overflow&lt;/i&gt; is reported when there is insufficient room
remaining in the output buffer.  This condition is represented by the
unique result object {@link #OVERFLOW}, whose {@link #isOverflow()
isOverflow} method returns &lt;tt&gt;true&lt;/tt&gt;.  &lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt; A &lt;i&gt;malformed-input error&lt;/i&gt; is reported when a sequence of
input units is not well-formed.  Such errors are described by instances of
this class whose {@link #isMalformed() isMalformed} method returns
&lt;tt&gt;true&lt;/tt&gt; and whose {@link #length() length} method returns the length
of the malformed sequence.  There is one unique instance of this class for
all malformed-input errors of a given length.  &lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt; An &lt;i&gt;unmappable-character error&lt;/i&gt; is reported when a sequence
of input units denotes a character that cannot be represented in the
output charset.  Such errors are described by instances of this class
whose {@link #isUnmappable() isUnmappable} method returns &lt;tt&gt;true&lt;/tt&gt; and
whose {@link #length() length} method returns the length of the input
sequence denoting the unmappable character.  There is one unique instance
of this class for all unmappable-character errors of a given length.
&lt;/p&gt;&lt;/li&gt;

&lt;/ul&gt;

For convenience, the {@link #isError() isError} method returns &lt;tt&gt;true&lt;/tt&gt;
for result objects that describe malformed-input and unmappable-character
errors but &lt;tt&gt;false&lt;/tt&gt; for those that describe underflow or overflow
conditions.  &lt;/p&gt;


@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.8, 03/12/19
@since 1.4
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_555864569.jpg" mode="s,e" name="CoderResult" refElementId="_9_5_f720368_1110473546659_66837_7951" refid="_9_5_f720368_1110473546659_66837_7951"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="CoderResult" refElementId="_9_5_f720368_1110473546659_66837_7951" refid="_9_5_f720368_1110473546659_66837_7951"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>