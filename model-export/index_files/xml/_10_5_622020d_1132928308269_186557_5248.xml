<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928308269_186557_5248"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="CookieHandler" refid="_10_5_622020d_1132928308269_497553_5246"/></annotatedElement><body humanName="Body" mode="s,e">A CookieHandler object provides a callback mechanism to hook up a
HTTP state management policy implementation into the HTTP protocol
handler. The HTTP state management mechanism specifies a way to
create a stateful session with HTTP requests and responses.

&lt;p&gt;A system-wide CookieHandler that to used by the HTTP protocol
handler can be registered by doing a
CookieHandler.setDefault(CookieHandler). The currently registered
CookieHandler can be retrieved by calling
CookieHandler.getDefault().

For more information on HTTP state management, see &lt;a
href="http://www.ietf.org/rfc/rfc2965.txt""&gt;&lt;i&gt;RFC&amp;nbsp;2965: HTTP
State Management Mechanism&lt;/i&gt;&lt;/a&gt;

@version 1.4, 03/08/09
@author Yingxian Wang
@since 1.5
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_303957224.jpg" mode="s,e" name="CookieHandler" refid="_10_5_622020d_1132928308269_497553_5246"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="CookieHandler" refid="_10_5_622020d_1132928308269_497553_5246"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>