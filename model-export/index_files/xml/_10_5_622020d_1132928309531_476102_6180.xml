<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928309531_476102_6180" refElementId="_10_5_622020d_1132928309531_476102_6180"><annotatedElement humanName="Annotated Element" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="ResultSet" refElementId="_9_5_f720368_1110473546690_728645_8579" refid="_9_5_f720368_1110473546690_728645_8579"/></annotatedElement><body humanName="Body" mode="s,e">A table of data representing a database result set, which
is usually generated by executing a statement that queries the database.

&lt;P&gt;A &lt;code&gt;ResultSet&lt;/code&gt; object  maintains a cursor pointing
to its current row of data.  Initially the cursor is positioned
before the first row. The &lt;code&gt;next&lt;/code&gt; method moves the
cursor to the next row, and because it returns &lt;code&gt;false&lt;/code&gt;
when there are no more rows in the &lt;code&gt;ResultSet&lt;/code&gt; object,
it can be used in a &lt;code&gt;while&lt;/code&gt; loop to iterate through
the result set.
&lt;P&gt;
A default &lt;code&gt;ResultSet&lt;/code&gt; object is not updatable and
has a cursor that moves forward only.  Thus, you can
iterate through it only once and only from the first row to the
last row. It is possible to
produce &lt;code&gt;ResultSet&lt;/code&gt; objects that are scrollable and/or
updatable.  The following code fragment, in which &lt;code&gt;con&lt;/code&gt;
is a valid &lt;code&gt;Connection&lt;/code&gt; object, illustrates how to make
a result set that is scrollable and insensitive to updates by others, and
that is updatable. See &lt;code&gt;ResultSet&lt;/code&gt; fields for other
options.
&lt;PRE&gt;

Statement stmt = con.createStatement(
ResultSet.TYPE_SCROLL_INSENSITIVE,
ResultSet.CONCUR_UPDATABLE);
ResultSet rs = stmt.executeQuery("SELECT a, b FROM TABLE2");
rs will be scrollable, will not show changes made by others,
and will be updatable

&lt;/PRE&gt;
The &lt;code&gt;ResultSet&lt;/code&gt; interface provides
&lt;i&gt;getter&lt;/i&gt; methods (&lt;code&gt;getBoolean&lt;/code&gt;, &lt;code&gt;getLong&lt;/code&gt;, and so on)
for retrieving column values from the current row.
Values can be retrieved using either the index number of the
column or the name of the column.  In general, using the
column index will be more efficient.  Columns are numbered from 1.
For maximum portability, result set columns within each row should be
read in left-to-right order, and each column should be read only once.

&lt;P&gt;For the getter methods, a JDBC driver attempts
to convert the underlying data to the Java type specified in the
getter method and returns a suitable Java value.  The JDBC specification
has a table showing the allowable mappings from SQL types to Java types
that can be used by the &lt;code&gt;ResultSet&lt;/code&gt; getter methods.
&lt;P&gt;
&lt;P&gt;Column names used as input to getter methods are case
insensitive.  When a getter method is called  with
a column name and several columns have the same name,
the value of the first matching column will be returned.
The column name option is
designed to be used when column names are used in the SQL
query that generated the result set.
For columns that are NOT explicitly named in the query, it
is best to use column numbers. If column names are used, there is
no way for the programmer to guarantee that they actually refer to
the intended columns.
&lt;P&gt;
A set of updater methods were added to this interface
in the JDBC 2.0 API (JDK 1.2).
The comments regarding parameters
to the getter methods also apply to parameters to the
updater methods.
&lt;P&gt;
The updater methods may be used in two ways:
&lt;ol&gt;
&lt;LI&gt;to update a column value in the current row.  In a scrollable
&lt;code&gt;ResultSet&lt;/code&gt; object, the cursor can be moved backwards
and forwards, to an absolute position, or to a position
relative to the current row.
The following code fragment updates the &lt;code&gt;NAME&lt;/code&gt; column
in the fifth row of the &lt;code&gt;ResultSet&lt;/code&gt; object
&lt;code&gt;rs&lt;/code&gt; and then uses the method &lt;code&gt;updateRow&lt;/code&gt;
to update the data source table from which &lt;code&gt;rs&lt;/code&gt; was derived.
&lt;PRE&gt;

rs.absolute(5); // moves the cursor to the fifth row of rs
rs.updateString("NAME", "AINSWORTH"); // updates the
&lt;code&gt;NAME&lt;/code&gt; column of row 5 to be &lt;code&gt;AINSWORTH&lt;/code&gt;
rs.updateRow(); // updates the row in the data source

&lt;/PRE&gt;
&lt;LI&gt;to insert column values into the insert row.  An updatable
&lt;code&gt;ResultSet&lt;/code&gt; object has a special row associated with
it that serves as a staging area for building a row to be inserted.
The following code fragment moves the cursor to the insert row, builds
a three-column row, and inserts it into &lt;code&gt;rs&lt;/code&gt; and into
the data source table using the method &lt;code&gt;insertRow&lt;/code&gt;.
&lt;PRE&gt;

rs.moveToInsertRow(); // moves cursor to the insert row
rs.updateString(1, "AINSWORTH"); // updates the
first column of the insert row to be &lt;code&gt;AINSWORTH&lt;/code&gt;
rs.updateInt(2,35); // updates the second column to be &lt;code&gt;35&lt;/code&gt;
rs.updateBoolean(3, true); // updates the third column to &lt;code&gt;true&lt;/code&gt;
rs.insertRow();
rs.moveToCurrentRow();

&lt;/PRE&gt;
&lt;/ol&gt;
&lt;P&gt;A &lt;code&gt;ResultSet&lt;/code&gt; object is automatically closed when the
&lt;code&gt;Statement&lt;/code&gt; object that
generated it is closed, re-executed, or used
to retrieve the next result from a sequence of multiple results.

&lt;P&gt;The number, types and properties of a &lt;code&gt;ResultSet&lt;/code&gt;
object's columns are provided by the &lt;code&gt;ResulSetMetaData&lt;/code&gt;
object returned by the &lt;code&gt;ResultSet.getMetaData&lt;/code&gt; method.

@see Statement#executeQuery
@see Statement#getResultSet
@see ResultSetMetaData
</body><documentation humanName="Documentation"/><owner classType="Interface" humanName="Owner" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" mode="s,e" name="ResultSet" refElementId="_9_5_f720368_1110473546690_728645_8579" refid="_9_5_f720368_1110473546690_728645_8579"/><owningElement classType="Interface" humanName="Owning Element" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="ResultSet" refElementId="_9_5_f720368_1110473546690_728645_8579" refid="_9_5_f720368_1110473546690_728645_8579"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>