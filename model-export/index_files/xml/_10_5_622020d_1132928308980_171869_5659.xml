<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928308980_171869_5659"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="RemoteObjectInvocationHandler" refid="_10_5_622020d_1132928308950_553735_5655"/></annotatedElement><body humanName="Body" mode="s,e">An implementation of the &lt;code&gt;InvocationHandler&lt;/code&gt; interface for
use with Java Remote Method Invocation (Java RMI).  This invocation
handler can be used in conjunction with a dynamic proxy instance as a
replacement for a pregenerated stub class.

&lt;p&gt;Applications are not expected to use this class directly.  A remote
object exported to use a dynamic proxy with {@link UnicastRemoteObject}
or {@link Activatable} has an instance of this class as that proxy's
invocation handler.

@version 1.3, 03/12/19
@author  Ann Wollrath
@since   1.5
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_1555793073.jpg" mode="s,e" name="RemoteObjectInvocationHandler" refid="_10_5_622020d_1132928308950_553735_5655"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="RemoteObjectInvocationHandler" refid="_10_5_622020d_1132928308950_553735_5655"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>