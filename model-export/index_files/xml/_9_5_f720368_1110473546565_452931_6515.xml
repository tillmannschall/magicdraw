<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_795627831.jpg" id="_9_5_f720368_1110473546565_452931_6515" refElementId="_9_5_f720368_1110473546565_452931_6515"><clientDependency humanName="Client Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::dnd::DropTargetAdapter -&gt; JDK 5.0 Classes::java::awt::dnd::DropTargetListener]" refElementId="_10_5_622020d_1132928320557_365837_12910" refid="_10_5_622020d_1132928320557_365837_12910"/></clientDependency><documentation humanName="Documentation" mode="s">An abstract adapter class for receiving drop target events. The methods in
this class are empty. This class exists only as a convenience for creating
listener objects.
&lt;p&gt;
Extend this class to create a &lt;code&gt;DropTargetEvent&lt;/code&gt; listener
and override the methods for the events of interest. (If you implement the
&lt;code&gt;DropTargetListener&lt;/code&gt; interface, you have to define all of
the methods in it. This abstract class defines a null implementation for
every method except &lt;code&gt;drop(DropTargetDropEvent)&lt;/code&gt;, so you only have
to define methods for events you care about.) You must provide an
implementation for at least &lt;code&gt;drop(DropTargetDropEvent)&lt;/code&gt;. This
method cannot have a null implementation because its specification requires
that you either accept or reject the drop, and, if accepted, indicate
whether the drop was successful.
&lt;p&gt;
Create a listener object using the extended class and then register it with
a &lt;code&gt;DropTarget&lt;/code&gt;. When the drag enters, moves over, or exits
the operable part of the drop site for that &lt;code&gt;DropTarget&lt;/code&gt;, when
the drop action changes, and when the drop occurs, the relevant method in
the listener object is invoked, and the &lt;code&gt;DropTargetEvent&lt;/code&gt; is
passed to it.
&lt;p&gt;
The operable part of the drop site for the &lt;code&gt;DropTarget&lt;/code&gt; is
the part of the associated &lt;code&gt;Component&lt;/code&gt;'s geometry that is not
obscured by an overlapping top-level window or by another
&lt;code&gt;Component&lt;/code&gt; higher in the Z-order that has an associated active
&lt;code&gt;DropTarget&lt;/code&gt;.
&lt;p&gt;
During the drag, the data associated with the current drag operation can be
retrieved by calling &lt;code&gt;getTransferable()&lt;/code&gt; on
&lt;code&gt;DropTargetDragEvent&lt;/code&gt; instances passed to the listener's
methods.
&lt;p&gt;
Note that &lt;code&gt;getTransferable()&lt;/code&gt; on the
&lt;code&gt;DropTargetDragEvent&lt;/code&gt; instance should only be called within the
respective listener's method and all the necessary data should be retrieved
from the returned &lt;code&gt;Transferable&lt;/code&gt; before that method returns.

@see DropTargetEvent
@see DropTargetListener

@author David Mendenhall
@version 1.7, 12/19/03
@since 1.4
</documentation><interfaceRealization humanName="Interface Realization"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::dnd::DropTargetAdapter -&gt; JDK 5.0 Classes::java::awt::dnd::DropTargetListener]" refElementId="_10_5_622020d_1132928320557_365837_12910" refid="_10_5_622020d_1132928320557_365837_12910"/></interfaceRealization><isAbstract humanName="Is Abstract" mode="s,e">true</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">DropTargetAdapter</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="dnd" refElementId="_9_5_f720368_1110473547284_448561_16376" refid="_9_5_f720368_1110473547284_448561_16376"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="An abstract adapter class for receiving drop targe..." refElementId="_10_5_622020d_1132928305655_855599_3666" refid="_10_5_622020d_1132928305655_855599_3666"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="An abstract adapter class for receiving drop targe..." refElementId="_10_5_622020d_1132928305655_855599_3666" refid="_10_5_622020d_1132928305655_855599_3666"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::awt::dnd::DropTargetAdapter -&gt; JDK 5.0 Classes::java::awt::dnd::DropTargetListener]" refElementId="_10_5_622020d_1132928320557_365837_12910" refid="_10_5_622020d_1132928320557_365837_12910"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="dnd" refElementId="_9_5_f720368_1110473547284_448561_16376" refid="_9_5_f720368_1110473547284_448561_16376"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="dnd" refElementId="_9_5_f720368_1110473547284_448561_16376" refid="_9_5_f720368_1110473547284_448561_16376"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="dnd" refElementId="_9_5_f720368_1110473547284_448561_16376" refid="_9_5_f720368_1110473547284_448561_16376"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::awt::dnd::DropTargetAdapter</qualifiedName><realizedInterfaces humanName="Realized Interface" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="DropTargetListener" refElementId="_9_5_f720368_1110473546565_62805_6525" refid="_9_5_f720368_1110473546565_62805_6525"/></realizedInterfaces><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>