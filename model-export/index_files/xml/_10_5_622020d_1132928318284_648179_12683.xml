<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928318284_648179_12683" refElementId="_10_5_622020d_1132928318284_648179_12683"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="SwingDropTarget" refElementId="_9_5_f720368_1110473548487_522698_24512" refid="_9_5_f720368_1110473548487_522698_24512"/></annotatedElement><body humanName="Body" mode="s,e">This is the default drop target for drag and drop operations if
one isn't provided by the developer.  &lt;code&gt;DropTarget&lt;/code&gt;
only supports one &lt;code&gt;DropTargetListener&lt;/code&gt; and doesn't
function properly if it isn't set.
This class sets the one listener as the linkage of drop handling
to the &lt;code&gt;TransferHandler&lt;/code&gt;, and adds support for
additional listeners which some of the &lt;code&gt;ComponentUI&lt;/code&gt;
implementations install to manipulate a drop insertion location.
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_555864569.jpg" mode="s,e" name="SwingDropTarget" refElementId="_9_5_f720368_1110473548487_522698_24512" refid="_9_5_f720368_1110473548487_522698_24512"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="SwingDropTarget" refElementId="_9_5_f720368_1110473548487_522698_24512" refid="_9_5_f720368_1110473548487_522698_24512"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>