<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" id="_9_5_f720368_1110473546565_112756_6649" refElementId="_9_5_f720368_1110473546565_112756_6649"><documentation humanName="Documentation" mode="s">The &lt;code&gt;TextAttribute&lt;/code&gt; class defines attribute keys and
attribute values used for text rendering.
&lt;p&gt;
&lt;code&gt;TextAttribute&lt;/code&gt; instances are used as attribute keys to
identify attributes in
{@link java.text.AttributedCharacterIterator AttributedCharacterIterator},
{@link java.awt.Font Font}, and other classes handling text
attributes. Other constants defined in this class are used
as attribute values.
&lt;p&gt;
For each text attribute, the documentation describes:
&lt;UL&gt;
&lt;LI&gt;the type of their values,
&lt;LI&gt;the valid values if there are limitations
&lt;LI&gt;relevant constants
&lt;LI&gt;the default effect if the attribute is absent (or has a
&lt;code&gt;null&lt;/code&gt; value).
&lt;LI&gt;a description of the effect.
&lt;LI&gt;the fallback behavior if the exact attribute requested is not
available.
&lt;/UL&gt;
&lt;p&gt;
&lt;H4&gt;Types of Values&lt;/H4&gt;
&lt;UL&gt;
&lt;LI&gt;The values of attributes must always be immutable.
&lt;LI&gt;Where a list of limitations is given, any value outside of that
set is reserved for future use, and ignored at present.
&lt;LI&gt;If the value is &lt;code&gt;null&lt;/code&gt; or not of the proper type
then it has the default effect. The effect of a particular value
can be interpolated, especially in the case of multiple master
fonts. This interpolation is done based on the nearest defined
constants above and below the request:&lt;BR&gt;
&lt;BLOCKQUOTE&gt;&lt;TT&gt;
interpolation = (request - below)/(above - below);
&lt;/TT&gt;&lt;/BLOCKQUOTE&gt;
&lt;/UL&gt;
&lt;p&gt;
&lt;H4&gt;Interpolation&lt;/H4&gt;
&lt;UL&gt;
&lt;LI&gt;Fonts should interpolate values in certain circumstances. For example,
when the WEIGHT value is 2.13. If the nearest surrounding values
in the font are WEIGHT_BOLD = 2.0 and WEIGHT_HEAVY = 2.25 then font would
then interpret the WEIGHT request as being 52% of the way between what
it considers BOLD and what it considers HEAVY. If the nearest surrounding
values are WEIGHT_SEMIBOLD = 1.25 and WEIGHT_ULTRABOLD = 2.75 then the
WEIGHT request is interpreted as being 58.67% of the way between SEMIBOLD
and ULTRABOLD.
&lt;LI&gt;Where a font does not have enough capability to handle a given
request, such as superscript, then it should simulate it to the best of
its ability.  To determine if simulation is being performed, the client
should query the font to see what actual attributes were used.
&lt;/UL&gt;

@see java.text.AttributedCharacterIterator
@see java.awt.Font
</documentation><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::java::awt::font::TextAttribute -&gt; JDK 5.0 Classes::java::text::AttributedCharacterIterator::Attribute]" refElementId="_10_5_622020d_1132928320617_154457_12973" refid="_10_5_622020d_1132928320617_154457_12973"/></generalization><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">true</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">true</isLeaf><name humanName="Name" mode="s,e">TextAttribute</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="font" refElementId="_9_5_f720368_1110473547299_819550_16532" refid="_9_5_f720368_1110473547299_819550_16532"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="The &lt;code&gt;TextAttribute&lt;/code&gt; class defines attri..." refElementId="_10_5_622020d_1132928305846_866607_3799" refid="_10_5_622020d_1132928305846_866607_3799"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_1454922150.jpg" isRelationship="true" name="Generalization[JDK 5.0 Classes::java::awt::font::TextAttribute -&gt; JDK 5.0 Classes::java::text::AttributedCharacterIterator::Attribute]" refElementId="_10_5_622020d_1132928320617_154457_12973" refid="_10_5_622020d_1132928320617_154457_12973"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="The &lt;code&gt;TextAttribute&lt;/code&gt; class defines attri..." refElementId="_10_5_622020d_1132928305846_866607_3799" refid="_10_5_622020d_1132928305846_866607_3799"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="font" refElementId="_9_5_f720368_1110473547299_819550_16532" refid="_9_5_f720368_1110473547299_819550_16532"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="font" refElementId="_9_5_f720368_1110473547299_819550_16532" refid="_9_5_f720368_1110473547299_819550_16532"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="font" refElementId="_9_5_f720368_1110473547299_819550_16532" refid="_9_5_f720368_1110473547299_819550_16532"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::awt::font::TextAttribute</qualifiedName><superClass humanName="Super Class"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="Attribute" refElementId="_9_5_f720368_1110473547315_824275_16567" refid="_9_5_f720368_1110473547315_824275_16567"/></superClass><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>