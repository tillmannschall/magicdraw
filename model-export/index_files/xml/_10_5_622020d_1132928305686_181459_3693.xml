<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928305686_181459_3693"><annotatedElement humanName="Annotated Element" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="AWTEventListener" refid="_9_5_f720368_1110473546565_967678_6541"/></annotatedElement><body humanName="Body" mode="s,e">The listener interface for receiving notification of events
dispatched to objects that are instances of Component or
MenuComponent or their subclasses.  Unlike the other EventListeners
in this package, AWTEventListeners passively observe events
being dispatched in the AWT, system-wide.  Most applications
should never use this class; applications which might use
AWTEventListeners include event recorders for automated testing,
and facilities such as the Java Accessibility package.
&lt;p&gt;
The class that is interested in monitoring AWT events
implements this interface, and the object created with that
class is registered with the Toolkit, using the Toolkit's
&lt;code&gt;addAWTEventListener&lt;/code&gt; method.  When an event is
dispatched anywhere in the AWT, that object's
&lt;code&gt;eventDispatched&lt;/code&gt; method is invoked.

@see java.awt.AWTEvent
@see java.awt.Toolkit#addAWTEventListener
@see java.awt.Toolkit#removeAWTEventListener

@author Fred Ecks
@version 1.10, 12/19/03
@since 1.2
</body><documentation humanName="Documentation"/><owner classType="Interface" humanName="Owner" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" mode="s,e" name="AWTEventListener" refid="_9_5_f720368_1110473546565_967678_6541"/><owningElement classType="Interface" humanName="Owning Element" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="AWTEventListener" refid="_9_5_f720368_1110473546565_967678_6541"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>