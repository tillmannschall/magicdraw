<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_795627831.jpg" id="_9_5_f720368_1110473546706_290048_8939" refElementId="_9_5_f720368_1110473546706_290048_8939"><clientDependency humanName="Client Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::TimeZone -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928322630_659123_15110" refid="_10_5_622020d_1132928322630_659123_15110"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::TimeZone -&gt; JDK 5.0 Classes::java::lang::Cloneable]" refElementId="_10_5_622020d_1132928322630_751119_15111" refid="_10_5_622020d_1132928322630_751119_15111"/></clientDependency><documentation humanName="Documentation" mode="s">&lt;code&gt;TimeZone&lt;/code&gt; represents a time zone offset, and also figures out daylight
savings.

&lt;p&gt;
Typically, you get a &lt;code&gt;TimeZone&lt;/code&gt; using &lt;code&gt;getDefault&lt;/code&gt;
which creates a &lt;code&gt;TimeZone&lt;/code&gt; based on the time zone where the program
is running. For example, for a program running in Japan, &lt;code&gt;getDefault&lt;/code&gt;
creates a &lt;code&gt;TimeZone&lt;/code&gt; object based on Japanese Standard Time.

&lt;p&gt;
You can also get a &lt;code&gt;TimeZone&lt;/code&gt; using &lt;code&gt;getTimeZone&lt;/code&gt;
along with a time zone ID. For instance, the time zone ID for the
U.S. Pacific Time zone is "America/Los_Angeles". So, you can get a
U.S. Pacific Time &lt;code&gt;TimeZone&lt;/code&gt; object with:
&lt;blockquote&gt;&lt;pre&gt;
TimeZone tz = TimeZone.getTimeZone("America/Los_Angeles");
&lt;/pre&gt;&lt;/blockquote&gt;
You can use the &lt;code&gt;getAvailableIDs&lt;/code&gt; method to iterate through
all the supported time zone IDs. You can then choose a
supported ID to get a &lt;code&gt;TimeZone&lt;/code&gt;.
If the time zone you want is not represented by one of the
supported IDs, then a custom time zone ID can be specified to
produce a TimeZone. The syntax of a custom time zone ID is:

&lt;blockquote&gt;&lt;pre&gt;
&lt;a name="CustomID"&gt;&lt;i&gt;CustomID:&lt;/i&gt;&lt;/a&gt;
&lt;code&gt;GMT&lt;/code&gt; &lt;i&gt;Sign&lt;/i&gt; &lt;i&gt;Hours&lt;/i&gt; &lt;code&gt;:&lt;/code&gt; &lt;i&gt;Minutes&lt;/i&gt;
&lt;code&gt;GMT&lt;/code&gt; &lt;i&gt;Sign&lt;/i&gt; &lt;i&gt;Hours&lt;/i&gt; &lt;i&gt;Minutes&lt;/i&gt;
&lt;code&gt;GMT&lt;/code&gt; &lt;i&gt;Sign&lt;/i&gt; &lt;i&gt;Hours&lt;/i&gt;
&lt;i&gt;Sign:&lt;/i&gt; one of
&lt;code&gt;+ -&lt;/code&gt;
&lt;i&gt;Hours:&lt;/i&gt;
&lt;i&gt;Digit&lt;/i&gt;
&lt;i&gt;Digit&lt;/i&gt; &lt;i&gt;Digit&lt;/i&gt;
&lt;i&gt;Minutes:&lt;/i&gt;
&lt;i&gt;Digit&lt;/i&gt; &lt;i&gt;Digit&lt;/i&gt;
&lt;i&gt;Digit:&lt;/i&gt; one of
&lt;code&gt;0 1 2 3 4 5 6 7 8 9&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;

&lt;i&gt;Hours&lt;/i&gt; must be between 0 to 23 and &lt;i&gt;Minutes&lt;/i&gt; must be
between 00 to 59.  For example, "GMT+10" and "GMT+0010" mean ten
hours and ten minutes ahead of GMT, respectively.
&lt;p&gt;
The format is locale independent and digits must be taken from the
Basic Latin block of the Unicode standard. No daylight saving time
transition schedule can be specified with a custom time zone ID. If
the specified string doesn't match the syntax, &lt;code&gt;"GMT"&lt;/code&gt;
is used.
&lt;p&gt;
When creating a &lt;code&gt;TimeZone&lt;/code&gt;, the specified custom time
zone ID is normalized in the following syntax:
&lt;blockquote&gt;&lt;pre&gt;
&lt;a name="NormalizedCustomID"&gt;&lt;i&gt;NormalizedCustomID:&lt;/i&gt;&lt;/a&gt;
&lt;code&gt;GMT&lt;/code&gt; &lt;i&gt;Sign&lt;/i&gt; &lt;i&gt;TwoDigitHours&lt;/i&gt; &lt;code&gt;:&lt;/code&gt; &lt;i&gt;Minutes&lt;/i&gt;
&lt;i&gt;Sign:&lt;/i&gt; one of
&lt;code&gt;+ -&lt;/code&gt;
&lt;i&gt;TwoDigitHours:&lt;/i&gt;
&lt;i&gt;Digit&lt;/i&gt; &lt;i&gt;Digit&lt;/i&gt;
&lt;i&gt;Minutes:&lt;/i&gt;
&lt;i&gt;Digit&lt;/i&gt; &lt;i&gt;Digit&lt;/i&gt;
&lt;i&gt;Digit:&lt;/i&gt; one of
&lt;code&gt;0 1 2 3 4 5 6 7 8 9&lt;/code&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
For example, TimeZone.getTimeZone("GMT-8").getID() returns "GMT-08:00".

&lt;h4&gt;Three-letter time zone IDs&lt;/h4&gt;

For compatibility with JDK 1.1.x, some other three-letter time zone IDs
(such as "PST", "CTT", "AST") are also supported. However, &lt;strong&gt;their
use is deprecated&lt;/strong&gt; because the same abbreviation is often used
for multiple time zones (for example, "CST" could be U.S. "Central Standard
Time" and "China Standard Time"), and the Java platform can then only
recognize one of them.


@see          Calendar
@see          GregorianCalendar
@see          SimpleTimeZone
@version      1.68 01/12/04
@author       Mark Davis, David Goldsmith, Chen-Lieh Huang, Alan Liu
@since        JDK1.1
</documentation><interfaceRealization humanName="Interface Realization"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::TimeZone -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928322630_659123_15110" refid="_10_5_622020d_1132928322630_659123_15110"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::TimeZone -&gt; JDK 5.0 Classes::java::lang::Cloneable]" refElementId="_10_5_622020d_1132928322630_751119_15111" refid="_10_5_622020d_1132928322630_751119_15111"/></interfaceRealization><isAbstract humanName="Is Abstract" mode="s,e">true</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">TimeZone</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="util" refElementId="_9_5_f720368_1110473547799_165814_19031" refid="_9_5_f720368_1110473547799_165814_19031"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="&lt;code&gt;TimeZone&lt;/code&gt; represents a time zone offse..." refElementId="_10_5_622020d_1132928313487_412417_7494" refid="_10_5_622020d_1132928313487_412417_7494"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="&lt;code&gt;TimeZone&lt;/code&gt; represents a time zone offse..." refElementId="_10_5_622020d_1132928313487_412417_7494" refid="_10_5_622020d_1132928313487_412417_7494"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::TimeZone -&gt; JDK 5.0 Classes::java::io::Serializable]" refElementId="_10_5_622020d_1132928322630_659123_15110" refid="_10_5_622020d_1132928322630_659123_15110"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::util::TimeZone -&gt; JDK 5.0 Classes::java::lang::Cloneable]" refElementId="_10_5_622020d_1132928322630_751119_15111" refid="_10_5_622020d_1132928322630_751119_15111"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="util" refElementId="_9_5_f720368_1110473547799_165814_19031" refid="_9_5_f720368_1110473547799_165814_19031"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="util" refElementId="_9_5_f720368_1110473547799_165814_19031" refid="_9_5_f720368_1110473547799_165814_19031"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="util" refElementId="_9_5_f720368_1110473547799_165814_19031" refid="_9_5_f720368_1110473547799_165814_19031"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::util::TimeZone</qualifiedName><realizedInterfaces humanName="Realized Interface" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="Serializable" refElementId="_9_5_f720368_1110473546612_364919_7481" refid="_9_5_f720368_1110473546612_364919_7481"/><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="Cloneable" refElementId="_9_5_f720368_1110473546612_888397_7587" refid="_9_5_f720368_1110473546612_888397_7587"/></realizedInterfaces><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>