<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928306997_866969_4535" refElementId="_10_5_622020d_1132928306997_866969_4535"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="BufferedInputStream" refElementId="_9_5_f720368_1110473546596_997228_7351" refid="_9_5_f720368_1110473546596_997228_7351"/></annotatedElement><body humanName="Body" mode="s,e">A &lt;code&gt;BufferedInputStream&lt;/code&gt; adds
functionality to another input stream-namely,
the ability to buffer the input and to
support the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt;
methods. When  the &lt;code&gt;BufferedInputStream&lt;/code&gt;
is created, an internal buffer array is
created. As bytes  from the stream are read
or skipped, the internal buffer is refilled
as necessary  from the contained input stream,
many bytes at a time. The &lt;code&gt;mark&lt;/code&gt;
operation  remembers a point in the input
stream and the &lt;code&gt;reset&lt;/code&gt; operation
causes all the  bytes read since the most
recent &lt;code&gt;mark&lt;/code&gt; operation to be
reread before new bytes are  taken from
the contained input stream.

@author  Arthur van Hoff
@version 1.50, 05/03/04
@since   JDK1.0
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_555864569.jpg" mode="s,e" name="BufferedInputStream" refElementId="_9_5_f720368_1110473546596_997228_7351" refid="_9_5_f720368_1110473546596_997228_7351"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="BufferedInputStream" refElementId="_9_5_f720368_1110473546596_997228_7351" refid="_9_5_f720368_1110473546596_997228_7351"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>