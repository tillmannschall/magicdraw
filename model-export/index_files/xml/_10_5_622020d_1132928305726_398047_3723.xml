<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928305726_398047_3723"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="InputEvent" refid="_9_5_f720368_1110473546565_876618_6571"/></annotatedElement><body humanName="Body" mode="s,e">The root event class for all component-level input events.

Input events are delivered to listeners before they are
processed normally by the source where they originated.
This allows listeners and component subclasses to "consume"
the event so that the source will not process them in their
default manner.  For example, consuming mousePressed events
on a Button component will prevent the Button from being
activated.

@author Carl Quinn
@version 1.34 06/02/04

@see KeyEvent
@see KeyAdapter
@see MouseEvent
@see MouseAdapter
@see MouseMotionAdapter

@since 1.1
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_303957224.jpg" mode="s,e" name="InputEvent" refid="_9_5_f720368_1110473546565_876618_6571"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_303957224.jpg" name="InputEvent" refid="_9_5_f720368_1110473546565_876618_6571"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>