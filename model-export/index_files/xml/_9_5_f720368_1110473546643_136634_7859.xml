<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_795627831.jpg" id="_9_5_f720368_1110473546643_136634_7859" refElementId="_9_5_f720368_1110473546643_136634_7859"><clientDependency humanName="Client Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::spi::AbstractInterruptibleChannel -&gt; JDK 5.0 Classes::java::nio::channels::Channel]" refElementId="_10_5_622020d_1132928321729_282130_13831" refid="_10_5_622020d_1132928321729_282130_13831"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::spi::AbstractInterruptibleChannel -&gt; JDK 5.0 Classes::java::nio::channels::InterruptibleChannel]" refElementId="_10_5_622020d_1132928321729_762009_13832" refid="_10_5_622020d_1132928321729_762009_13832"/></clientDependency><documentation humanName="Documentation" mode="s">Base implementation class for interruptible channels.

&lt;p&gt; This class encapsulates the low-level machinery required to implement
the asynchronous closing and interruption of channels.  A concrete channel
class must invoke the {@link #begin begin} and {@link #end end} methods
before and after, respectively, invoking an I/O operation that might block
indefinitely.  In order to ensure that the {@link #end end} method is always
invoked, these methods should be used within a
&lt;tt&gt;try&lt;/tt&gt;&amp;nbsp;...&amp;nbsp;&lt;tt&gt;finally&lt;/tt&gt; block: &lt;a name="be"&gt;

&lt;blockquote&gt;&lt;pre&gt;
boolean completed = false;
try {
begin();
completed = ...;    // Perform blocking I/O operation
return ...;         // Return result
} finally {
end(completed);
}&lt;/pre&gt;&lt;/blockquote&gt;

&lt;p&gt; The &lt;tt&gt;completed&lt;/tt&gt; argument to the {@link #end end} method tells
whether or not the I/O operation actually completed, that is, whether it had
any effect that would be visible to the invoker.  In the case of an
operation that reads bytes, for example, this argument should be
&lt;tt&gt;true&lt;/tt&gt; if, and only if, some bytes were actually transferred into the
invoker's target buffer.

&lt;p&gt; A concrete channel class must also implement the {@link
#implCloseChannel implCloseChannel} method in such a way that if it is
invoked while another thread is blocked in a native I/O operation upon the
channel then that operation will immediately return, either by throwing an
exception or by returning normally.  If a thread is interrupted or the
channel upon which it is blocked is asynchronously closed then the channel's
{@link #end end} method will throw the appropriate exception.

&lt;p&gt; This class performs the synchronization required to implement the {@link
java.nio.channels.Channel} specification.  Implementations of the {@link
#implCloseChannel implCloseChannel} method need not synchronize against
other threads that might be attempting to close the channel.  &lt;/p&gt;


@author Mark Reinhold
@author JSR-51 Expert Group
@version 1.15, 03/12/19
@since 1.4
</documentation><interfaceRealization humanName="Interface Realization"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::spi::AbstractInterruptibleChannel -&gt; JDK 5.0 Classes::java::nio::channels::Channel]" refElementId="_10_5_622020d_1132928321729_282130_13831" refid="_10_5_622020d_1132928321729_282130_13831"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::spi::AbstractInterruptibleChannel -&gt; JDK 5.0 Classes::java::nio::channels::InterruptibleChannel]" refElementId="_10_5_622020d_1132928321729_762009_13832" refid="_10_5_622020d_1132928321729_762009_13832"/></interfaceRealization><isAbstract humanName="Is Abstract" mode="s,e">true</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><member humanName="Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="FooChannel" refElementId="_9_5_f720368_1110473547643_756721_18154" refid="_9_5_f720368_1110473547643_756721_18154"/></member><name humanName="Name" mode="s,e">AbstractInterruptibleChannel</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="spi" refElementId="_9_5_f720368_1110473547643_602806_18152" refid="_9_5_f720368_1110473547643_602806_18152"/><nestedClassifier humanName="Nested Classifier"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="FooChannel" refElementId="_9_5_f720368_1110473547643_756721_18154" refid="_9_5_f720368_1110473547643_756721_18154"/></nestedClassifier><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="Base implementation class for interruptible channe..." refElementId="_10_5_622020d_1132928308590_176637_5370" refid="_10_5_622020d_1132928308590_176637_5370"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="Base implementation class for interruptible channe..." refElementId="_10_5_622020d_1132928308590_176637_5370" refid="_10_5_622020d_1132928308590_176637_5370"/><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="FooChannel" refElementId="_9_5_f720368_1110473547643_756721_18154" refid="_9_5_f720368_1110473547643_756721_18154"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::spi::AbstractInterruptibleChannel -&gt; JDK 5.0 Classes::java::nio::channels::Channel]" refElementId="_10_5_622020d_1132928321729_282130_13831" refid="_10_5_622020d_1132928321729_282130_13831"/><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_1152342155.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::java::nio::channels::spi::AbstractInterruptibleChannel -&gt; JDK 5.0 Classes::java::nio::channels::InterruptibleChannel]" refElementId="_10_5_622020d_1132928321729_762009_13832" refid="_10_5_622020d_1132928321729_762009_13832"/></ownedElement><ownedMember humanName="Owned Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="FooChannel" refElementId="_9_5_f720368_1110473547643_756721_18154" refid="_9_5_f720368_1110473547643_756721_18154"/></ownedMember><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="spi" refElementId="_9_5_f720368_1110473547643_602806_18152" refid="_9_5_f720368_1110473547643_602806_18152"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="spi" refElementId="_9_5_f720368_1110473547643_602806_18152" refid="_9_5_f720368_1110473547643_602806_18152"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="spi" refElementId="_9_5_f720368_1110473547643_602806_18152" refid="_9_5_f720368_1110473547643_602806_18152"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::nio::channels::spi::AbstractInterruptibleChannel</qualifiedName><realizedInterfaces humanName="Realized Interface" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="Channel" refElementId="_9_5_f720368_1110473546643_379446_7877" refid="_9_5_f720368_1110473546643_379446_7877"/><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="InterruptibleChannel" refElementId="_9_5_f720368_1110473546643_524469_7903" refid="_9_5_f720368_1110473546643_524469_7903"/></realizedInterfaces><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>