<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928306787_540511_4386"><annotatedElement humanName="Annotated Element" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="BeanContextServiceProvider" refid="_9_5_f720368_1110473546596_531262_7169"/></annotatedElement><body humanName="Body" mode="s,e">&lt;p&gt;
One of the primary functions of a BeanContext is to act a as rendezvous
between JavaBeans, and BeanContextServiceProviders.
&lt;/p&gt;
&lt;p&gt;
A JavaBean nested within a BeanContext, may ask that BeanContext to
provide an instance of a "service", based upon a reference to a Java
Class object that represents that service.
&lt;/p&gt;
&lt;p&gt;
If such a service has been registered with the context, or one of its
nesting context's, in the case where a context delegate to its context
to satisfy a service request, then the BeanContextServiceProvider associated with
the service is asked to provide an instance of that service.
&lt;/p&gt;
&lt;p&gt;
The ServcieProvider may always return the same instance, or it may
construct a new instance for each request.
&lt;/p&gt;
</body><documentation humanName="Documentation"/><owner classType="Interface" humanName="Owner" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" mode="s,e" name="BeanContextServiceProvider" refid="_9_5_f720368_1110473546596_531262_7169"/><owningElement classType="Interface" humanName="Owning Element" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="BeanContextServiceProvider" refid="_9_5_f720368_1110473546596_531262_7169"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>