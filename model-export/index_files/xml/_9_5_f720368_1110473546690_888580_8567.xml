<?xml version="1.0" encoding="UTF-8"?><magicdraw><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" id="_9_5_f720368_1110473546690_888580_8567" refElementId="_9_5_f720368_1110473546690_888580_8567"><documentation humanName="Documentation" mode="s">&lt;P&gt;The basic service for managing a set of JDBC drivers.&lt;br&gt;
&lt;B&gt;NOTE:&lt;/B&gt; The {@link &lt;code&gt;DataSource&lt;/code&gt;} interface, new in the
JDBC 2.0 API, provides another way to connect to a data source.
The use of a &lt;code&gt;DataSource&lt;/code&gt; object is the preferred means of
connecting to a data source.

&lt;P&gt;As part of its initialization, the &lt;code&gt;DriverManager&lt;/code&gt; class will
attempt to load the driver classes referenced in the "jdbc.drivers"
system property. This allows a user to customize the JDBC Drivers
used by their applications. For example in your
~/.hotjava/properties file you might specify:
&lt;pre&gt;
&lt;CODE&gt;jdbc.drivers=foo.bah.Driver:wombat.sql.Driver:bad.taste.ourDriver&lt;/CODE&gt;
&lt;/pre&gt;

A program can also explicitly load JDBC drivers at any time. For
example, the my.sql.Driver is loaded with the following statement:
&lt;pre&gt;
&lt;CODE&gt;Class.forName("my.sql.Driver");&lt;/CODE&gt;
&lt;/pre&gt;

&lt;P&gt;When the method &lt;code&gt;getConnection&lt;/code&gt; is called,
the &lt;code&gt;DriverManager&lt;/code&gt; will attempt to
locate a suitable driver from amongst those loaded at
initialization and those loaded explicitly using the same classloader
as the current applet or application.
&lt;P&gt;
Starting with the Java 2 SDK, Standard Edition, version 1.3, a
logging stream can be set only if the proper
permission has been granted.  Normally this will be done with
the tool PolicyTool, which can be used to grant &lt;code&gt;permission
java.sql.SQLPermission "setLog"&lt;/code&gt;.
@see Driver
@see Connection
</documentation><isAbstract humanName="Is Abstract" mode="s,e">false</isAbstract><isActive humanName="Is Active" mode="s,e">false</isActive><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">DriverManager</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="sql" refElementId="_9_5_f720368_1110473547753_914338_18866" refid="_9_5_f720368_1110473547753_914338_18866"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="&lt;P&gt;The basic service for managing a set of JDBC dr..." refElementId="_10_5_622020d_1132928309491_45098_6169" refid="_10_5_622020d_1132928309491_45098_6169"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" name="&lt;P&gt;The basic service for managing a set of JDBC dr..." refElementId="_10_5_622020d_1132928309491_45098_6169" refid="_10_5_622020d_1132928309491_45098_6169"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_1518868172.jpg" mode="s,e" name="sql" refElementId="_9_5_f720368_1110473547753_914338_18866" refid="_9_5_f720368_1110473547753_914338_18866"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="sql" refElementId="_9_5_f720368_1110473547753_914338_18866" refid="_9_5_f720368_1110473547753_914338_18866"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_1518868172.jpg" name="sql" refElementId="_9_5_f720368_1110473547753_914338_18866" refid="_9_5_f720368_1110473547753_914338_18866"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::java::sql::DriverManager</qualifiedName><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility" mode="e">public</visibility></class></magicdraw>