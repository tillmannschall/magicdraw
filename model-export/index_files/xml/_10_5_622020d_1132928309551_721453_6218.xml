<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928309551_721453_6218"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="BreakDictionary" refid="_9_5_f720368_1110473546690_864771_8617"/></annotatedElement><body humanName="Body" mode="s,e">This is the class that represents the list of known words used by
DictionaryBasedBreakIterator.  The conceptual data structure used
here is a trie: there is a node hanging off the root node for every
letter that can start a word.  Each of these nodes has a node hanging
off of it for every letter that can be the second letter of a word
if this node is the first letter, and so on.  The trie is represented
as a two-dimensional array that can be treated as a table of state
transitions.  Indexes are used to compress this array, taking
advantage of the fact that this array will always be very sparse.
</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_1555793073.jpg" mode="s,e" name="BreakDictionary" refid="_9_5_f720368_1110473546690_864771_8617"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="BreakDictionary" refid="_9_5_f720368_1110473546690_864771_8617"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>