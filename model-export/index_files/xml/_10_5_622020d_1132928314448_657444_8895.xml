<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928314448_657444_8895"><annotatedElement humanName="Annotated Element" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="LSParser" refid="_10_5_622020d_1132928314408_853822_8893"/></annotatedElement><body humanName="Body" mode="s,e">An interface to an object that is able to build, or augment, a DOM tree
from various input sources.
&lt;p&gt; &lt;code&gt;LSParser&lt;/code&gt; provides an API for parsing XML and building the
corresponding DOM document structure. A &lt;code&gt;LSParser&lt;/code&gt; instance
can be obtained by invoking the
&lt;code&gt;DOMImplementationLS.createLSParser()&lt;/code&gt; method.
&lt;p&gt; As specified in [&lt;a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'&gt;DOM Level 3 Core&lt;/a&gt;]
, when a document is first made available via the LSParser:
&lt;ul&gt;
&lt;li&gt; there will
never be two adjacent nodes of type NODE_TEXT, and there will never be
empty text nodes.
&lt;/li&gt;
&lt;li&gt; it is expected that the &lt;code&gt;value&lt;/code&gt; and
&lt;code&gt;nodeValue&lt;/code&gt; attributes of an &lt;code&gt;Attr&lt;/code&gt; node initially
return the &lt;a href='http://www.w3.org/TR/2004/REC-xml-20040204#AVNormalize'&gt;XML 1.0
normalized value&lt;/a&gt;. However, if the parameters "&lt;a href='http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-validate-if-schema'&gt;
validate-if-schema&lt;/a&gt;" and "&lt;a href='http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-datatype-normalization'&gt;
datatype-normalization&lt;/a&gt;" are set to &lt;code&gt;true&lt;/code&gt;, depending on the attribute normalization
used, the attribute values may differ from the ones obtained by the XML
1.0 attribute normalization. If the parameters "&lt;a href='http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-datatype-normalization'&gt;
datatype-normalization&lt;/a&gt;" is set to &lt;code&gt;false&lt;/code&gt;, the XML 1.0 attribute normalization is
guaranteed to occur, and if the attributes list does not contain
namespace declarations, the &lt;code&gt;attributes&lt;/code&gt; attribute on
&lt;code&gt;Element&lt;/code&gt; node represents the property &lt;b&gt;[attributes]&lt;/b&gt; defined in [&lt;a href='http://www.w3.org/TR/2004/REC-xml-infoset-20040204/'&gt;XML Information Set&lt;/a&gt;]
.
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; Asynchronous &lt;code&gt;LSParser&lt;/code&gt; objects are expected to also
implement the &lt;code&gt;events::EventTarget&lt;/code&gt; interface so that event
listeners can be registered on asynchronous &lt;code&gt;LSParser&lt;/code&gt;
objects.
&lt;p&gt; Events supported by asynchronous &lt;code&gt;LSParser&lt;/code&gt; objects are:
&lt;dl&gt;
&lt;dt&gt;load&lt;/dt&gt;
&lt;dd&gt;
The &lt;code&gt;LSParser&lt;/code&gt; finishes to load the document. See also the
definition of the &lt;code&gt;LSLoadEvent&lt;/code&gt; interface. &lt;/dd&gt;
&lt;dt&gt;progress&lt;/dt&gt;
&lt;dd&gt; The
&lt;code&gt;LSParser&lt;/code&gt; signals progress as data is parsed.  This
specification does not attempt to define exactly when progress events
should be dispatched. That is intentionally left as
implementation-dependent. Here is one example of how an application might
dispatch progress events: Once the parser starts receiving data, a
progress event is dispatched to indicate that the parsing starts. From
there on, a progress event is dispatched for every 4096 bytes of data
that is received and processed. This is only one example, though, and
implementations can choose to dispatch progress events at any time while
parsing, or not dispatch them at all.  See also the definition of the
&lt;code&gt;LSProgressEvent&lt;/code&gt; interface. &lt;/dd&gt;
&lt;/dl&gt;
&lt;p &gt;&lt;b&gt;Note:&lt;/b&gt;  All events defined in this specification use the
namespace URI &lt;code&gt;"http://www.w3.org/2002/DOMLS"&lt;/code&gt;.
&lt;p&gt; While parsing an input source, errors are reported to the application
through the error handler (&lt;code&gt;LSParser.domConfig&lt;/code&gt;'s "&lt;a href='http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-error-handler'&gt;
error-handler&lt;/a&gt;" parameter). This specification does in no way try to define all possible
errors that can occur while parsing XML, or any other markup, but some
common error cases are defined. The types (&lt;code&gt;DOMError.type&lt;/code&gt;) of
errors and warnings defined by this specification are:
&lt;dl&gt;
&lt;dt&gt;
&lt;code&gt;"check-character-normalization-failure" [error]&lt;/code&gt; &lt;/dt&gt;
&lt;dd&gt; Raised if
the parameter "&lt;a href='http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-check-character-normalization'&gt;
check-character-normalization&lt;/a&gt;" is set to true and a string is encountered that fails normalization
checking. &lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;"doctype-not-allowed" [fatal]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt; Raised if the
configuration parameter "disallow-doctype" is set to &lt;code&gt;true&lt;/code&gt;
and a doctype is encountered. &lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;"no-input-specified" [fatal]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;
Raised when loading a document and no input is specified in the
&lt;code&gt;LSInput&lt;/code&gt; object. &lt;/dd&gt;
&lt;dt&gt;
&lt;code&gt;"pi-base-uri-not-preserved" [warning]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt; Raised if a processing
instruction is encountered in a location where the base URI of the
processing instruction can not be preserved.  One example of a case where
this warning will be raised is if the configuration parameter "&lt;a href='http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-entities'&gt;
entities&lt;/a&gt;" is set to &lt;code&gt;false&lt;/code&gt; and the following XML file is parsed:
&lt;pre&gt;
&lt;!DOCTYPE root [ &lt;!ENTITY e SYSTEM 'subdir/myentity.ent' ]&gt;
&lt;root&gt; &amp;e; &lt;/root&gt;&lt;/pre&gt;
And &lt;code&gt;subdir/myentity.ent&lt;/code&gt;
contains:
&lt;pre&gt;&lt;one&gt; &lt;two/&gt; &lt;/one&gt; &lt;?pi 3.14159?&gt;
&lt;more/&gt;&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;"unbound-prefix-in-entity" [warning]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt; An
implementation dependent warning that may be raised if the configuration
parameter "&lt;a href='http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-namespaces'&gt;
namespaces&lt;/a&gt;" is set to &lt;code&gt;true&lt;/code&gt; and an unbound namespace prefix is
encountered in an entity's replacement text. Raising this warning is not
enforced since some existing parsers may not recognize unbound namespace
prefixes in the replacement text of entities. &lt;/dd&gt;
&lt;dt&gt;
&lt;code&gt;"unknown-character-denormalization" [fatal]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt; Raised if the
configuration parameter "ignore-unknown-character-denormalizations" is
set to &lt;code&gt;false&lt;/code&gt; and a character is encountered for which the
processor cannot determine the normalization properties. &lt;/dd&gt;
&lt;dt&gt;
&lt;code&gt;"unsupported-encoding" [fatal]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt; Raised if an unsupported
encoding is encountered. &lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;"unsupported-media-type" [fatal]&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;
Raised if the configuration parameter "supported-media-types-only" is set
to &lt;code&gt;true&lt;/code&gt; and an unsupported media type is encountered. &lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt; In addition to raising the defined errors and warnings, implementations
are expected to raise implementation specific errors and warnings for any
other error and warning cases such as IO errors (file not found,
permission denied,...), XML well-formedness errors, and so on.
&lt;p&gt;See also the &lt;a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407'&gt;Document Object Model (DOM) Level 3 Load
and Save Specification&lt;/a&gt;.
</body><documentation humanName="Documentation"/><owner classType="Interface" humanName="Owner" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" mode="s,e" name="LSParser" refid="_10_5_622020d_1132928314408_853822_8893"/><owningElement classType="Interface" humanName="Owning Element" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="LSParser" refid="_10_5_622020d_1132928314408_853822_8893"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>