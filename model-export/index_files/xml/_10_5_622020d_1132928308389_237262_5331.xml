<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928308389_237262_5331" refElementId="_10_5_622020d_1132928308389_237262_5331"><annotatedElement humanName="Annotated Element" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="SocketOptions" refElementId="_9_5_f720368_1110473546643_415038_7815" refid="_9_5_f720368_1110473546643_415038_7815"/></annotatedElement><body humanName="Body" mode="s,e">Interface of methods to get/set socket options.  This interface is
implemented by: &lt;B&gt;SocketImpl&lt;/B&gt; and  &lt;B&gt;DatagramSocketImpl&lt;/B&gt;.
Subclasses of these should override the methods
of this interface in order to support their own options.
&lt;P&gt;
The methods and constants which specify options in this interface are
for implementation only.  If you're not subclassing SocketImpl or
DatagramSocketImpl, &lt;B&gt;you won't use these directly.&lt;/B&gt; There are
type-safe methods to get/set each of these options in Socket, ServerSocket,
DatagramSocket and MulticastSocket.
&lt;P&gt;
@version 1.32, 01/28/04
@author David Brown
</body><documentation humanName="Documentation"/><owner classType="Interface" humanName="Owner" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" mode="s,e" name="SocketOptions" refElementId="_9_5_f720368_1110473546643_415038_7815" refid="_9_5_f720368_1110473546643_415038_7815"/><owningElement classType="Interface" humanName="Owning Element" humanType="Interface" icon="index_files/icon_interface_1046467249.jpg" name="SocketOptions" refElementId="_9_5_f720368_1110473546643_415038_7815" refid="_9_5_f720368_1110473546643_415038_7815"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>