<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" id="_10_5_622020d_1132928314408_593624_8886"><annotatedElement humanName="Annotated Element" mode="s,e"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="LSInput" refid="_10_5_622020d_1132928314398_137484_8884"/></annotatedElement><body humanName="Body" mode="s,e">This interface represents an input source for data.
&lt;p&gt; This interface allows an application to encapsulate information about
an input source in a single object, which may include a public
identifier, a system identifier, a byte stream (possibly with a specified
encoding), a base URI, and/or a character stream.
&lt;p&gt; The exact definitions of a byte stream and a character stream are
binding dependent.
&lt;p&gt; The application is expected to provide objects that implement this
interface whenever such objects are needed. The application can either
provide its own objects that implement this interface, or it can use the
generic factory method &lt;code&gt;DOMImplementationLS.createLSInput()&lt;/code&gt;
to create objects that implement this interface.
&lt;p&gt; The &lt;code&gt;LSParser&lt;/code&gt; will use the &lt;code&gt;LSInput&lt;/code&gt; object to
determine how to read data. The &lt;code&gt;LSParser&lt;/code&gt; will look at the
different inputs specified in the &lt;code&gt;LSInput&lt;/code&gt; in the following
order to know which one to read from, the first one that is not null and
not an empty string will be used:
&lt;ol&gt;
&lt;li&gt; &lt;code&gt;LSInput.characterStream&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;LSInput.byteStream&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt; &lt;code&gt;LSInput.stringData&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;LSInput.systemId&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt; &lt;code&gt;LSInput.publicId&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; If all inputs are null, the &lt;code&gt;LSParser&lt;/code&gt; will report a
&lt;code&gt;DOMError&lt;/code&gt; with its &lt;code&gt;DOMError.type&lt;/code&gt; set to
&lt;code&gt;"no-input-specified"&lt;/code&gt; and its &lt;code&gt;DOMError.severity&lt;/code&gt;
set to &lt;code&gt;DOMError.SEVERITY_FATAL_ERROR&lt;/code&gt;.
&lt;p&gt; &lt;code&gt;LSInput&lt;/code&gt; objects belong to the application. The DOM
implementation will never modify them (though it may make copies and
modify the copies, if necessary).
&lt;p&gt;See also the &lt;a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407'&gt;Document Object Model (DOM) Level 3 Load
and Save Specification&lt;/a&gt;.
</body><documentation humanName="Documentation"/><owner classType="Interface" humanName="Owner" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" mode="s,e" name="LSInput" refid="_10_5_622020d_1132928314398_137484_8884"/><owningElement classType="Interface" humanName="Owning Element" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="LSInput" refid="_10_5_622020d_1132928314398_137484_8884"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>