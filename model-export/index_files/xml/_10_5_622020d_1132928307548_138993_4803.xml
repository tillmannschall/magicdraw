<?xml version="1.0" encoding="UTF-8"?><magicdraw><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_841774062.jpg" id="_10_5_622020d_1132928307548_138993_4803" refElementId="_10_5_622020d_1132928307548_138993_4803"><annotatedElement humanName="Annotated Element" mode="s,e"><class classType="Class" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="ManagementPermission" refElementId="_10_5_622020d_1132928307548_669812_4801" refid="_10_5_622020d_1132928307548_669812_4801"/></annotatedElement><body humanName="Body" mode="s,e">The permission which the SecurityManager will check when code
that is running with a SecurityManager calls methods defined
in the management interface for the Java platform.
&lt;P&gt;
The following table
provides a summary description of what the permission allows,
and discusses the risks of granting code the permission.
&lt;P&gt;

&lt;table border=1 cellpadding=5 summary="Table shows permission target name, wh
at the permission allows, and associated risks"&gt;
&lt;tr&gt;
&lt;th&gt;Permission Target Name&lt;/th&gt;
&lt;th&gt;What the Permission Allows&lt;/th&gt;
&lt;th&gt;Risks of Allowing this Permission&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;control&lt;/td&gt;
&lt;td&gt;Ability to control the runtime characteristics of the Java virtual
machine, for example, setting the -verbose:gc and -verbose:class flag,
setting the threshold of a memory pool, and enabling and disabling
the thread contention monitoring support.
&lt;/td&gt;
&lt;td&gt;This allows an attacker to control the runtime characteristics
of the Java virtual machine and cause the system to misbehave.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;monitor&lt;/td&gt;
&lt;td&gt;Ability to retrieve runtime information about
the Java virtual machine such as thread
stack trace, a list of all loaded class names, and input arguments
to the Java virtual machine.&lt;/td&gt;
&lt;td&gt;This allows malicious code to monitor runtime information and
uncover vulnerabilities.&lt;/td&gt;
&lt;/tr&gt;

&lt;/table&gt;

&lt;p&gt;
Programmers do not normally create ManagementPermission objects directly.
Instead they are created by the security policy code based on reading
the security policy file.

@author  Mandy Chung
@version 1.3, 12/19/03
@since   1.5

@see java.security.BasicPermission
@see java.security.Permission
@see java.security.Permissions
@see java.security.PermissionCollection
@see java.lang.SecurityManager

</body><documentation humanName="Documentation"/><owner classType="Class" humanName="Owner" humanType="Class" icon="index_files/icon_class_555864569.jpg" mode="s,e" name="ManagementPermission" refElementId="_10_5_622020d_1132928307548_669812_4801" refid="_10_5_622020d_1132928307548_669812_4801"/><owningElement classType="Class" humanName="Owning Element" humanType="Class" icon="index_files/icon_class_555864569.jpg" name="ManagementPermission" refElementId="_10_5_622020d_1132928307548_669812_4801" refid="_10_5_622020d_1132928307548_669812_4801"/><TO_DO humanName="To Do" mode="s,e"/></comment></magicdraw>