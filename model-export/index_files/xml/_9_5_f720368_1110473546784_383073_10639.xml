<?xml version="1.0" encoding="UTF-8"?><magicdraw><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" id="_9_5_f720368_1110473546784_383073_10639"><documentation humanName="Documentation" mode="standard">State Model for buttons.
This model is used for check boxes and radio buttons, which are
special kinds of buttons, as well as for normal buttons.
For check boxes and radio buttons, pressing the mouse selects
the button. For normal buttons, pressing the mouse "arms" the
button. Releasing the mouse over the button then initiates a
&lt;i&gt;button&lt;/i&gt; press, firing its action event. Releasing the
mouse elsewhere disarms the button.
&lt;p&gt;
In use, a UI will invoke {@link #setSelected} when a mouse
click occurs over a check box or radio button. It will invoke
{@link #setArmed} when the mouse is pressed over a regular
button and invoke {@link #setPressed} when the mouse is released.
If the mouse travels outside the button in the meantime,
&lt;code&gt;setArmed(false)&lt;/code&gt; will tell the button not to fire
when it sees &lt;code&gt;setPressed&lt;/code&gt;. (If the mouse travels
back in, the button will be rearmed.)
&lt;blockquote&gt;
&lt;b&gt;Note: &lt;/b&gt;&lt;br&gt;
A button is triggered when it is both "armed" and "pressed".
&lt;/blockquote&gt;

@version 1.26 12/19/03
@author Jeff Dinkins
</documentation><general humanName="General"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="ItemSelectable" refid="_9_5_f720368_1110473546581_556143_7053"/></general><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928323952_147879_18231"/></generalization><isAbstract humanName="Is Abstract">true</isAbstract><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><name humanName="Name" mode="s,e">ButtonModel</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="swing" refid="_9_5_f720368_1110473548112_353725_20951"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928317833_935284_12314"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928323952_147879_18231"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928317833_935284_12314"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_2000410491.jpg" mode="s,e" name="swing" refid="_9_5_f720368_1110473548112_353725_20951"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="swing" refid="_9_5_f720368_1110473548112_353725_20951"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="swing" refid="_9_5_f720368_1110473548112_353725_20951"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::javax::swing::ButtonModel</qualifiedName><supplierDependency humanName="Supplier Dependency"><interfacerealization classType="InterfaceRealization" humanType="Interface Realization" icon="index_files/icon_interfacerealization_425275537.jpg" isRelationship="true" name="Interface Realization[JDK 5.0 Classes::javax::swing::DefaultButtonModel -&gt; JDK 5.0 Classes::javax::swing::ButtonModel]" refid="_10_5_622020d_1132928323952_360002_18242"/></supplierDependency><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility">public</visibility></interface></magicdraw>