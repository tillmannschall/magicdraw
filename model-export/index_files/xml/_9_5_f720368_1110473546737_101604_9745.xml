<?xml version="1.0" encoding="UTF-8"?><magicdraw><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" id="_9_5_f720368_1110473546737_101604_9745"><documentation humanName="Documentation" mode="standard">A source data line is a data line to which data may be written.  It acts as
a source to its mixer. An application writes audio bytes to a source data line,
which handles the buffering of the bytes and delivers them to the mixer.
The mixer may mix the samples with those from other sources and then deliver
the mix to a target such as an output port (which may represent an audio output
device on a sound card).
&lt;p&gt;
Note that the naming convention for this interface reflects the relationship
between the line and its mixer.  From the perspective of an application,
a source data line may act as a target for audio data.
&lt;p&gt;
A source data line can be obtained from a mixer by invoking the
&lt;code&gt;{@link Mixer#getLine getLine}&lt;/code&gt; method of &lt;code&gt;Mixer&lt;/code&gt; with
an appropriate &lt;code&gt;{@link DataLine.Info}&lt;/code&gt; object.
&lt;p&gt;
The &lt;code&gt;SourceDataLine&lt;/code&gt; interface provides a method for writing
audio data to the data line's buffer. Applications that play or mix
audio should write data to the source data line quickly enough to keep the
buffer from underflowing (emptying), which could cause discontinuities in
the audio that are perceived as clicks.  Applications can use the
&lt;code&gt;{@link DataLine#available available}&lt;/code&gt; method defined in the
&lt;code&gt;DataLine&lt;/code&gt; interface to determine the amount of data currently
queued in the data line's buffer.  The amount of data which can be written
to the buffer without blocking is the difference between the buffer size
and the amount of queued data.  If the delivery of audio output
stops due to underflow, a &lt;code&gt;{@link LineEvent.Type#STOP STOP}&lt;/code&gt; event is
generated.  A &lt;code&gt;{@link LineEvent.Type#START START}&lt;/code&gt; event is generated
when the audio output resumes.

@author Kara Kytle
@version 1.20 03/12/19
@see Mixer
@see DataLine
@see TargetDataLine
@since 1.3
</documentation><general humanName="General"><interface classType="Interface" humanType="Interface" icon="index_files/icon_interface_118881143.jpg" name="DataLine" refid="_9_5_f720368_1110473546737_441830_9725"/></general><generalization humanName="Generalization"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928323361_374777_16613"/></generalization><inheritedMember humanName="Inherited Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="Info" refid="_9_5_f720368_1110473548096_430262_20873"/><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="Info" refid="_9_5_f720368_1110473548096_228899_20885"/></inheritedMember><isAbstract humanName="Is Abstract">true</isAbstract><isFinalSpecialization humanName="Is Final Specialization" mode="e">false</isFinalSpecialization><isLeaf humanName="Is Leaf" mode="e">false</isLeaf><member humanName="Member"><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="Info" refid="_9_5_f720368_1110473548096_430262_20873"/><class classType="Class" humanType="Class" icon="index_files/icon_class_1555793073.jpg" name="Info" refid="_9_5_f720368_1110473548096_228899_20885"/></member><name humanName="Name" mode="s,e">SourceDataLine</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="sampled" refid="_9_5_f720368_1110473548096_948655_20840"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928316271_800275_10654"/></ownedComment><ownedElement humanName="Owned Element"><generalization classType="Generalization" humanType="Generalization" icon="index_files/icon_generalization_99042020.jpg" isRelationship="true" refid="_10_5_622020d_1132928323361_374777_16613"/><comment classType="Comment" humanType="Comment" icon="index_files/icon_comment_2051026490.jpg" refid="_10_5_622020d_1132928316271_800275_10654"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="index_files/icon_package_2000410491.jpg" mode="s,e" name="sampled" refid="_9_5_f720368_1110473548096_948655_20840"/><owningPackage classType="Package" humanName="Owning Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="sampled" refid="_9_5_f720368_1110473548096_948655_20840"/><package classType="Package" humanName="Package" humanType="Package" icon="index_files/icon_package_2000410491.jpg" name="sampled" refid="_9_5_f720368_1110473548096_948655_20840"/><qualifiedName humanName="Qualified Name" mode="e">JDK 5.0 Classes::javax::sound::sampled::SourceDataLine</qualifiedName><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility">public</visibility></interface></magicdraw>